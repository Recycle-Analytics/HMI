//--------------------------------------------------------------------------------
// Auto-generated by Migen (b1b2b29) & LiteX (c3ed8025) on 2020-06-30 17:53:37
//--------------------------------------------------------------------------------
module __main__(
	output reg serial_tx,
	input wire serial_rx,
	input wire clk100,
	input wire cpu_reset,
	input wire user_btn0,
	input wire user_btn1,
	input wire user_btn2,
	input wire user_btn3,
	input wire user_btn4,
	output wire [7:0] db,
	output wire cs,
	output wire rs,
	output wire rd,
	output wire wr,
	output wire rst,
	output wire [7:0] db1,
	output wire cs1,
	output wire rs1,
	output wire rd1,
	output wire wr1,
	output wire rst1
);

reg soc_soccontroller_reset_storage = 1'd0;
reg soc_soccontroller_reset_re = 1'd0;
reg [31:0] soc_soccontroller_scratch_storage = 32'd305419896;
reg soc_soccontroller_scratch_re = 1'd0;
wire [31:0] soc_soccontroller_bus_errors_status;
wire soc_soccontroller_bus_errors_we;
wire soc_soccontroller_reset;
wire soc_soccontroller_bus_error;
reg [31:0] soc_soccontroller_bus_errors = 32'd0;
wire soc_cpu_reset;
reg [31:0] soc_cpu_interrupt = 32'd0;
wire [29:0] soc_cpu_ibus_adr;
wire [31:0] soc_cpu_ibus_dat_w;
wire [31:0] soc_cpu_ibus_dat_r;
wire [3:0] soc_cpu_ibus_sel;
wire soc_cpu_ibus_cyc;
wire soc_cpu_ibus_stb;
wire soc_cpu_ibus_ack;
wire soc_cpu_ibus_we;
wire [2:0] soc_cpu_ibus_cti;
wire [1:0] soc_cpu_ibus_bte;
wire soc_cpu_ibus_err;
wire [29:0] soc_cpu_dbus_adr;
wire [31:0] soc_cpu_dbus_dat_w;
wire [31:0] soc_cpu_dbus_dat_r;
wire [3:0] soc_cpu_dbus_sel;
wire soc_cpu_dbus_cyc;
wire soc_cpu_dbus_stb;
wire soc_cpu_dbus_ack;
wire soc_cpu_dbus_we;
wire [2:0] soc_cpu_dbus_cti;
wire [1:0] soc_cpu_dbus_bte;
wire soc_cpu_dbus_err;
reg [31:0] soc_vexriscv = 32'd0;
wire [29:0] soc_basesoc_ram_bus_adr;
wire [31:0] soc_basesoc_ram_bus_dat_w;
wire [31:0] soc_basesoc_ram_bus_dat_r;
wire [3:0] soc_basesoc_ram_bus_sel;
wire soc_basesoc_ram_bus_cyc;
wire soc_basesoc_ram_bus_stb;
reg soc_basesoc_ram_bus_ack = 1'd0;
wire soc_basesoc_ram_bus_we;
wire [2:0] soc_basesoc_ram_bus_cti;
wire [1:0] soc_basesoc_ram_bus_bte;
reg soc_basesoc_ram_bus_err = 1'd0;
wire [12:0] soc_basesoc_adr;
wire [31:0] soc_basesoc_dat_r;
wire [29:0] soc_interface0_ram_bus_adr;
wire [31:0] soc_interface0_ram_bus_dat_w;
wire [31:0] soc_interface0_ram_bus_dat_r;
wire [3:0] soc_interface0_ram_bus_sel;
wire soc_interface0_ram_bus_cyc;
wire soc_interface0_ram_bus_stb;
reg soc_interface0_ram_bus_ack = 1'd0;
wire soc_interface0_ram_bus_we;
wire [2:0] soc_interface0_ram_bus_cti;
wire [1:0] soc_interface0_ram_bus_bte;
reg soc_interface0_ram_bus_err = 1'd0;
wire [9:0] soc_sram0_adr;
wire [31:0] soc_sram0_dat_r;
reg [3:0] soc_sram0_we = 4'd0;
wire [31:0] soc_sram0_dat_w;
wire [29:0] soc_interface1_ram_bus_adr;
wire [31:0] soc_interface1_ram_bus_dat_w;
wire [31:0] soc_interface1_ram_bus_dat_r;
wire [3:0] soc_interface1_ram_bus_sel;
wire soc_interface1_ram_bus_cyc;
wire soc_interface1_ram_bus_stb;
reg soc_interface1_ram_bus_ack = 1'd0;
wire soc_interface1_ram_bus_we;
wire [2:0] soc_interface1_ram_bus_cti;
wire [1:0] soc_interface1_ram_bus_bte;
reg soc_interface1_ram_bus_err = 1'd0;
wire [11:0] soc_sram1_adr;
wire [31:0] soc_sram1_dat_r;
reg [3:0] soc_sram1_we = 4'd0;
wire [31:0] soc_sram1_dat_w;
reg [31:0] soc_storage = 32'd4947802;
reg soc_re = 1'd0;
wire soc_sink_valid;
reg soc_sink_ready = 1'd0;
wire soc_sink_first;
wire soc_sink_last;
wire [7:0] soc_sink_payload_data;
reg soc_uart_clk_txen = 1'd0;
reg [31:0] soc_phase_accumulator_tx = 32'd0;
reg [7:0] soc_tx_reg = 8'd0;
reg [3:0] soc_tx_bitcount = 4'd0;
reg soc_tx_busy = 1'd0;
reg soc_source_valid = 1'd0;
wire soc_source_ready;
reg soc_source_first = 1'd0;
reg soc_source_last = 1'd0;
reg [7:0] soc_source_payload_data = 8'd0;
reg soc_uart_clk_rxen = 1'd0;
reg [31:0] soc_phase_accumulator_rx = 32'd0;
wire soc_rx;
reg soc_rx_r = 1'd0;
reg [7:0] soc_rx_reg = 8'd0;
reg [3:0] soc_rx_bitcount = 4'd0;
reg soc_rx_busy = 1'd0;
wire soc_uart_rxtx_re;
wire [7:0] soc_uart_rxtx_r;
wire soc_uart_rxtx_we;
wire [7:0] soc_uart_rxtx_w;
wire soc_uart_txfull_status;
wire soc_uart_txfull_we;
wire soc_uart_rxempty_status;
wire soc_uart_rxempty_we;
wire soc_uart_irq;
wire soc_uart_tx_status;
reg soc_uart_tx_pending = 1'd0;
wire soc_uart_tx_trigger;
reg soc_uart_tx_clear = 1'd0;
reg soc_uart_tx_old_trigger = 1'd0;
wire soc_uart_rx_status;
reg soc_uart_rx_pending = 1'd0;
wire soc_uart_rx_trigger;
reg soc_uart_rx_clear = 1'd0;
reg soc_uart_rx_old_trigger = 1'd0;
wire soc_uart_eventmanager_status_re;
wire [1:0] soc_uart_eventmanager_status_r;
wire soc_uart_eventmanager_status_we;
reg [1:0] soc_uart_eventmanager_status_w = 2'd0;
wire soc_uart_eventmanager_pending_re;
wire [1:0] soc_uart_eventmanager_pending_r;
wire soc_uart_eventmanager_pending_we;
reg [1:0] soc_uart_eventmanager_pending_w = 2'd0;
reg [1:0] soc_uart_eventmanager_storage = 2'd0;
reg soc_uart_eventmanager_re = 1'd0;
wire soc_uart_uart_sink_valid;
wire soc_uart_uart_sink_ready;
wire soc_uart_uart_sink_first;
wire soc_uart_uart_sink_last;
wire [7:0] soc_uart_uart_sink_payload_data;
wire soc_uart_uart_source_valid;
wire soc_uart_uart_source_ready;
wire soc_uart_uart_source_first;
wire soc_uart_uart_source_last;
wire [7:0] soc_uart_uart_source_payload_data;
wire soc_uart_tx_fifo_sink_valid;
wire soc_uart_tx_fifo_sink_ready;
reg soc_uart_tx_fifo_sink_first = 1'd0;
reg soc_uart_tx_fifo_sink_last = 1'd0;
wire [7:0] soc_uart_tx_fifo_sink_payload_data;
wire soc_uart_tx_fifo_source_valid;
wire soc_uart_tx_fifo_source_ready;
wire soc_uart_tx_fifo_source_first;
wire soc_uart_tx_fifo_source_last;
wire [7:0] soc_uart_tx_fifo_source_payload_data;
wire soc_uart_tx_fifo_re;
reg soc_uart_tx_fifo_readable = 1'd0;
wire soc_uart_tx_fifo_syncfifo_we;
wire soc_uart_tx_fifo_syncfifo_writable;
wire soc_uart_tx_fifo_syncfifo_re;
wire soc_uart_tx_fifo_syncfifo_readable;
wire [9:0] soc_uart_tx_fifo_syncfifo_din;
wire [9:0] soc_uart_tx_fifo_syncfifo_dout;
reg [4:0] soc_uart_tx_fifo_level0 = 5'd0;
reg soc_uart_tx_fifo_replace = 1'd0;
reg [3:0] soc_uart_tx_fifo_produce = 4'd0;
reg [3:0] soc_uart_tx_fifo_consume = 4'd0;
reg [3:0] soc_uart_tx_fifo_wrport_adr = 4'd0;
wire [9:0] soc_uart_tx_fifo_wrport_dat_r;
wire soc_uart_tx_fifo_wrport_we;
wire [9:0] soc_uart_tx_fifo_wrport_dat_w;
wire soc_uart_tx_fifo_do_read;
wire [3:0] soc_uart_tx_fifo_rdport_adr;
wire [9:0] soc_uart_tx_fifo_rdport_dat_r;
wire soc_uart_tx_fifo_rdport_re;
wire [4:0] soc_uart_tx_fifo_level1;
wire [7:0] soc_uart_tx_fifo_fifo_in_payload_data;
wire soc_uart_tx_fifo_fifo_in_first;
wire soc_uart_tx_fifo_fifo_in_last;
wire [7:0] soc_uart_tx_fifo_fifo_out_payload_data;
wire soc_uart_tx_fifo_fifo_out_first;
wire soc_uart_tx_fifo_fifo_out_last;
wire soc_uart_rx_fifo_sink_valid;
wire soc_uart_rx_fifo_sink_ready;
wire soc_uart_rx_fifo_sink_first;
wire soc_uart_rx_fifo_sink_last;
wire [7:0] soc_uart_rx_fifo_sink_payload_data;
wire soc_uart_rx_fifo_source_valid;
wire soc_uart_rx_fifo_source_ready;
wire soc_uart_rx_fifo_source_first;
wire soc_uart_rx_fifo_source_last;
wire [7:0] soc_uart_rx_fifo_source_payload_data;
wire soc_uart_rx_fifo_re;
reg soc_uart_rx_fifo_readable = 1'd0;
wire soc_uart_rx_fifo_syncfifo_we;
wire soc_uart_rx_fifo_syncfifo_writable;
wire soc_uart_rx_fifo_syncfifo_re;
wire soc_uart_rx_fifo_syncfifo_readable;
wire [9:0] soc_uart_rx_fifo_syncfifo_din;
wire [9:0] soc_uart_rx_fifo_syncfifo_dout;
reg [4:0] soc_uart_rx_fifo_level0 = 5'd0;
reg soc_uart_rx_fifo_replace = 1'd0;
reg [3:0] soc_uart_rx_fifo_produce = 4'd0;
reg [3:0] soc_uart_rx_fifo_consume = 4'd0;
reg [3:0] soc_uart_rx_fifo_wrport_adr = 4'd0;
wire [9:0] soc_uart_rx_fifo_wrport_dat_r;
wire soc_uart_rx_fifo_wrport_we;
wire [9:0] soc_uart_rx_fifo_wrport_dat_w;
wire soc_uart_rx_fifo_do_read;
wire [3:0] soc_uart_rx_fifo_rdport_adr;
wire [9:0] soc_uart_rx_fifo_rdport_dat_r;
wire soc_uart_rx_fifo_rdport_re;
wire [4:0] soc_uart_rx_fifo_level1;
wire [7:0] soc_uart_rx_fifo_fifo_in_payload_data;
wire soc_uart_rx_fifo_fifo_in_first;
wire soc_uart_rx_fifo_fifo_in_last;
wire [7:0] soc_uart_rx_fifo_fifo_out_payload_data;
wire soc_uart_rx_fifo_fifo_out_first;
wire soc_uart_rx_fifo_fifo_out_last;
reg soc_uart_reset = 1'd0;
reg [31:0] soc_timer_load_storage = 32'd0;
reg soc_timer_load_re = 1'd0;
reg [31:0] soc_timer_reload_storage = 32'd0;
reg soc_timer_reload_re = 1'd0;
reg soc_timer_en_storage = 1'd0;
reg soc_timer_en_re = 1'd0;
reg soc_timer_update_value_storage = 1'd0;
reg soc_timer_update_value_re = 1'd0;
reg [31:0] soc_timer_value_status = 32'd0;
wire soc_timer_value_we;
wire soc_timer_irq;
wire soc_timer_zero_status;
reg soc_timer_zero_pending = 1'd0;
wire soc_timer_zero_trigger;
reg soc_timer_zero_clear = 1'd0;
reg soc_timer_zero_old_trigger = 1'd0;
wire soc_timer_eventmanager_status_re;
wire soc_timer_eventmanager_status_r;
wire soc_timer_eventmanager_status_we;
wire soc_timer_eventmanager_status_w;
wire soc_timer_eventmanager_pending_re;
wire soc_timer_eventmanager_pending_r;
wire soc_timer_eventmanager_pending_we;
wire soc_timer_eventmanager_pending_w;
reg soc_timer_eventmanager_storage = 1'd0;
reg soc_timer_eventmanager_re = 1'd0;
reg [31:0] soc_timer_value = 32'd0;
reg [13:0] soc_interface_adr = 14'd0;
reg soc_interface_we = 1'd0;
wire [7:0] soc_interface_dat_w;
wire [7:0] soc_interface_dat_r;
wire [29:0] soc_wishbone_adr;
wire [31:0] soc_wishbone_dat_w;
wire [31:0] soc_wishbone_dat_r;
wire [3:0] soc_wishbone_sel;
wire soc_wishbone_cyc;
wire soc_wishbone_stb;
reg soc_wishbone_ack = 1'd0;
wire soc_wishbone_we;
wire [2:0] soc_wishbone_cti;
wire [1:0] soc_wishbone_bte;
reg soc_wishbone_err = 1'd0;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg soc_int_rst = 1'd1;
wire [4:0] soc_in_status;
wire soc_in_we;
reg [7:0] soc_dir_status = 8'd0;
wire soc_dir_we;
wire soc_irq;
wire soc_arriba_status;
reg soc_arriba_pending = 1'd0;
wire soc_arriba_trigger;
reg soc_arriba_clear = 1'd0;
reg soc_arriba_old_trigger = 1'd0;
wire soc_abajo_status;
reg soc_abajo_pending = 1'd0;
wire soc_abajo_trigger;
reg soc_abajo_clear = 1'd0;
reg soc_abajo_old_trigger = 1'd0;
wire soc_derecha_status;
reg soc_derecha_pending = 1'd0;
wire soc_derecha_trigger;
reg soc_derecha_clear = 1'd0;
reg soc_derecha_old_trigger = 1'd0;
wire soc_izquierda_status;
reg soc_izquierda_pending = 1'd0;
wire soc_izquierda_trigger;
reg soc_izquierda_clear = 1'd0;
reg soc_izquierda_old_trigger = 1'd0;
wire soc_pause_status;
reg soc_pause_pending = 1'd0;
wire soc_pause_trigger;
reg soc_pause_clear = 1'd0;
reg soc_pause_old_trigger = 1'd0;
reg [7:0] soc_DATA_storage = 8'd0;
reg soc_DATA_re = 1'd0;
reg [7:0] soc_ADDR_storage = 8'd0;
reg soc_ADDR_re = 1'd0;
wire soc_status;
wire soc_we;
reg [1:0] soc_START_storage = 2'd0;
reg soc_START_re = 1'd0;
reg soc_OPTION_storage = 1'd0;
reg soc_OPTION_re = 1'd0;
reg soc_CS__storage = 1'd0;
reg soc_CS__re = 1'd0;
wire [7:0] soc_db_;
wire soc_rs_;
wire soc_rd_;
wire soc_wr_;
wire soc_rst_;
wire soc_cs_;
wire [7:0] soc_data;
wire [7:0] soc_addr;
reg soc_busy = 1'd0;
wire soc_start;
wire soc_option;
reg [7:0] soc_db = 8'd0;
reg soc_rs = 1'd0;
reg soc_rd = 1'd0;
reg soc_wr = 1'd0;
reg soc_rst = 1'd0;
reg [3:0] soc_manage = 4'd0;
reg [3:0] soc_count2 = 4'd0;
reg [3:0] soc_countwr = 4'd0;
reg [2:0] soc_manage_ant = 3'd0;
reg vns_wishbone2csr_state = 1'd0;
reg vns_wishbone2csr_next_state = 1'd0;
wire vns_status_re;
wire [4:0] vns_status_r;
wire vns_status_we;
reg [4:0] vns_status_w = 5'd0;
wire vns_pending_re;
wire [4:0] vns_pending_r;
wire vns_pending_we;
reg [4:0] vns_pending_w = 5'd0;
reg [4:0] vns_storage = 5'd0;
reg vns_re = 1'd0;
reg [2:0] vns_lcd_i80_state = 3'd0;
reg [2:0] vns_lcd_i80_next_state = 3'd0;
reg soc_rs_next_value0 = 1'd0;
reg soc_rs_next_value_ce0 = 1'd0;
reg soc_rd_next_value1 = 1'd0;
reg soc_rd_next_value_ce1 = 1'd0;
reg soc_wr_next_value2 = 1'd0;
reg soc_wr_next_value_ce2 = 1'd0;
reg [7:0] soc_db_next_value3 = 8'd0;
reg soc_db_next_value_ce3 = 1'd0;
reg soc_busy_next_value4 = 1'd0;
reg soc_busy_next_value_ce4 = 1'd0;
reg [3:0] soc_count2_next_value5 = 4'd0;
reg soc_count2_next_value_ce5 = 1'd0;
reg soc_rst_next_value6 = 1'd0;
reg soc_rst_next_value_ce6 = 1'd0;
reg [3:0] soc_manage_next_value7 = 4'd0;
reg soc_manage_next_value_ce7 = 1'd0;
reg [2:0] soc_manage_ant_next_value8 = 3'd0;
reg soc_manage_ant_next_value_ce8 = 1'd0;
reg [3:0] soc_countwr_next_value9 = 4'd0;
reg soc_countwr_next_value_ce9 = 1'd0;
wire [29:0] vns_shared_adr;
wire [31:0] vns_shared_dat_w;
reg [31:0] vns_shared_dat_r = 32'd0;
wire [3:0] vns_shared_sel;
wire vns_shared_cyc;
wire vns_shared_stb;
reg vns_shared_ack = 1'd0;
wire vns_shared_we;
wire [2:0] vns_shared_cti;
wire [1:0] vns_shared_bte;
wire vns_shared_err;
wire [1:0] vns_request;
reg vns_grant = 1'd0;
reg [3:0] vns_slave_sel = 4'd0;
reg [3:0] vns_slave_sel_r = 4'd0;
reg vns_error = 1'd0;
wire vns_wait;
wire vns_done;
reg [19:0] vns_count = 20'd1000000;
wire [13:0] vns_csr_bankarray_interface0_bank_bus_adr;
wire vns_csr_bankarray_interface0_bank_bus_we;
wire [7:0] vns_csr_bankarray_interface0_bank_bus_dat_w;
reg [7:0] vns_csr_bankarray_interface0_bank_bus_dat_r = 8'd0;
wire vns_csr_bankarray_csrbank0_in_re;
wire [4:0] vns_csr_bankarray_csrbank0_in_r;
wire vns_csr_bankarray_csrbank0_in_we;
wire [4:0] vns_csr_bankarray_csrbank0_in_w;
wire vns_csr_bankarray_csrbank0_dir_re;
wire [7:0] vns_csr_bankarray_csrbank0_dir_r;
wire vns_csr_bankarray_csrbank0_dir_we;
wire [7:0] vns_csr_bankarray_csrbank0_dir_w;
wire vns_csr_bankarray_csrbank0_ev_enable0_re;
wire [4:0] vns_csr_bankarray_csrbank0_ev_enable0_r;
wire vns_csr_bankarray_csrbank0_ev_enable0_we;
wire [4:0] vns_csr_bankarray_csrbank0_ev_enable0_w;
wire vns_csr_bankarray_csrbank0_sel;
wire [13:0] vns_csr_bankarray_interface1_bank_bus_adr;
wire vns_csr_bankarray_interface1_bank_bus_we;
wire [7:0] vns_csr_bankarray_interface1_bank_bus_dat_w;
reg [7:0] vns_csr_bankarray_interface1_bank_bus_dat_r = 8'd0;
wire vns_csr_bankarray_csrbank1_reset0_re;
wire vns_csr_bankarray_csrbank1_reset0_r;
wire vns_csr_bankarray_csrbank1_reset0_we;
wire vns_csr_bankarray_csrbank1_reset0_w;
wire vns_csr_bankarray_csrbank1_scratch3_re;
wire [7:0] vns_csr_bankarray_csrbank1_scratch3_r;
wire vns_csr_bankarray_csrbank1_scratch3_we;
wire [7:0] vns_csr_bankarray_csrbank1_scratch3_w;
wire vns_csr_bankarray_csrbank1_scratch2_re;
wire [7:0] vns_csr_bankarray_csrbank1_scratch2_r;
wire vns_csr_bankarray_csrbank1_scratch2_we;
wire [7:0] vns_csr_bankarray_csrbank1_scratch2_w;
wire vns_csr_bankarray_csrbank1_scratch1_re;
wire [7:0] vns_csr_bankarray_csrbank1_scratch1_r;
wire vns_csr_bankarray_csrbank1_scratch1_we;
wire [7:0] vns_csr_bankarray_csrbank1_scratch1_w;
wire vns_csr_bankarray_csrbank1_scratch0_re;
wire [7:0] vns_csr_bankarray_csrbank1_scratch0_r;
wire vns_csr_bankarray_csrbank1_scratch0_we;
wire [7:0] vns_csr_bankarray_csrbank1_scratch0_w;
wire vns_csr_bankarray_csrbank1_bus_errors3_re;
wire [7:0] vns_csr_bankarray_csrbank1_bus_errors3_r;
wire vns_csr_bankarray_csrbank1_bus_errors3_we;
wire [7:0] vns_csr_bankarray_csrbank1_bus_errors3_w;
wire vns_csr_bankarray_csrbank1_bus_errors2_re;
wire [7:0] vns_csr_bankarray_csrbank1_bus_errors2_r;
wire vns_csr_bankarray_csrbank1_bus_errors2_we;
wire [7:0] vns_csr_bankarray_csrbank1_bus_errors2_w;
wire vns_csr_bankarray_csrbank1_bus_errors1_re;
wire [7:0] vns_csr_bankarray_csrbank1_bus_errors1_r;
wire vns_csr_bankarray_csrbank1_bus_errors1_we;
wire [7:0] vns_csr_bankarray_csrbank1_bus_errors1_w;
wire vns_csr_bankarray_csrbank1_bus_errors0_re;
wire [7:0] vns_csr_bankarray_csrbank1_bus_errors0_r;
wire vns_csr_bankarray_csrbank1_bus_errors0_we;
wire [7:0] vns_csr_bankarray_csrbank1_bus_errors0_w;
wire vns_csr_bankarray_csrbank1_sel;
wire [13:0] vns_csr_bankarray_sram_bus_adr;
wire vns_csr_bankarray_sram_bus_we;
wire [7:0] vns_csr_bankarray_sram_bus_dat_w;
reg [7:0] vns_csr_bankarray_sram_bus_dat_r = 8'd0;
wire [5:0] vns_csr_bankarray_adr;
wire [7:0] vns_csr_bankarray_dat_r;
wire vns_csr_bankarray_sel;
reg vns_csr_bankarray_sel_r = 1'd0;
wire [13:0] vns_csr_bankarray_interface2_bank_bus_adr;
wire vns_csr_bankarray_interface2_bank_bus_we;
wire [7:0] vns_csr_bankarray_interface2_bank_bus_dat_w;
reg [7:0] vns_csr_bankarray_interface2_bank_bus_dat_r = 8'd0;
wire vns_csr_bankarray_csrbank2_DATA0_re;
wire [7:0] vns_csr_bankarray_csrbank2_DATA0_r;
wire vns_csr_bankarray_csrbank2_DATA0_we;
wire [7:0] vns_csr_bankarray_csrbank2_DATA0_w;
wire vns_csr_bankarray_csrbank2_ADDR0_re;
wire [7:0] vns_csr_bankarray_csrbank2_ADDR0_r;
wire vns_csr_bankarray_csrbank2_ADDR0_we;
wire [7:0] vns_csr_bankarray_csrbank2_ADDR0_w;
wire vns_csr_bankarray_csrbank2_BUSY_re;
wire vns_csr_bankarray_csrbank2_BUSY_r;
wire vns_csr_bankarray_csrbank2_BUSY_we;
wire vns_csr_bankarray_csrbank2_BUSY_w;
wire vns_csr_bankarray_csrbank2_START0_re;
wire [1:0] vns_csr_bankarray_csrbank2_START0_r;
wire vns_csr_bankarray_csrbank2_START0_we;
wire [1:0] vns_csr_bankarray_csrbank2_START0_w;
wire vns_csr_bankarray_csrbank2_OPTION0_re;
wire vns_csr_bankarray_csrbank2_OPTION0_r;
wire vns_csr_bankarray_csrbank2_OPTION0_we;
wire vns_csr_bankarray_csrbank2_OPTION0_w;
wire vns_csr_bankarray_csrbank2_CS_0_re;
wire vns_csr_bankarray_csrbank2_CS_0_r;
wire vns_csr_bankarray_csrbank2_CS_0_we;
wire vns_csr_bankarray_csrbank2_CS_0_w;
wire vns_csr_bankarray_csrbank2_sel;
wire [13:0] vns_csr_bankarray_interface3_bank_bus_adr;
wire vns_csr_bankarray_interface3_bank_bus_we;
wire [7:0] vns_csr_bankarray_interface3_bank_bus_dat_w;
reg [7:0] vns_csr_bankarray_interface3_bank_bus_dat_r = 8'd0;
wire vns_csr_bankarray_csrbank3_load3_re;
wire [7:0] vns_csr_bankarray_csrbank3_load3_r;
wire vns_csr_bankarray_csrbank3_load3_we;
wire [7:0] vns_csr_bankarray_csrbank3_load3_w;
wire vns_csr_bankarray_csrbank3_load2_re;
wire [7:0] vns_csr_bankarray_csrbank3_load2_r;
wire vns_csr_bankarray_csrbank3_load2_we;
wire [7:0] vns_csr_bankarray_csrbank3_load2_w;
wire vns_csr_bankarray_csrbank3_load1_re;
wire [7:0] vns_csr_bankarray_csrbank3_load1_r;
wire vns_csr_bankarray_csrbank3_load1_we;
wire [7:0] vns_csr_bankarray_csrbank3_load1_w;
wire vns_csr_bankarray_csrbank3_load0_re;
wire [7:0] vns_csr_bankarray_csrbank3_load0_r;
wire vns_csr_bankarray_csrbank3_load0_we;
wire [7:0] vns_csr_bankarray_csrbank3_load0_w;
wire vns_csr_bankarray_csrbank3_reload3_re;
wire [7:0] vns_csr_bankarray_csrbank3_reload3_r;
wire vns_csr_bankarray_csrbank3_reload3_we;
wire [7:0] vns_csr_bankarray_csrbank3_reload3_w;
wire vns_csr_bankarray_csrbank3_reload2_re;
wire [7:0] vns_csr_bankarray_csrbank3_reload2_r;
wire vns_csr_bankarray_csrbank3_reload2_we;
wire [7:0] vns_csr_bankarray_csrbank3_reload2_w;
wire vns_csr_bankarray_csrbank3_reload1_re;
wire [7:0] vns_csr_bankarray_csrbank3_reload1_r;
wire vns_csr_bankarray_csrbank3_reload1_we;
wire [7:0] vns_csr_bankarray_csrbank3_reload1_w;
wire vns_csr_bankarray_csrbank3_reload0_re;
wire [7:0] vns_csr_bankarray_csrbank3_reload0_r;
wire vns_csr_bankarray_csrbank3_reload0_we;
wire [7:0] vns_csr_bankarray_csrbank3_reload0_w;
wire vns_csr_bankarray_csrbank3_en0_re;
wire vns_csr_bankarray_csrbank3_en0_r;
wire vns_csr_bankarray_csrbank3_en0_we;
wire vns_csr_bankarray_csrbank3_en0_w;
wire vns_csr_bankarray_csrbank3_update_value0_re;
wire vns_csr_bankarray_csrbank3_update_value0_r;
wire vns_csr_bankarray_csrbank3_update_value0_we;
wire vns_csr_bankarray_csrbank3_update_value0_w;
wire vns_csr_bankarray_csrbank3_value3_re;
wire [7:0] vns_csr_bankarray_csrbank3_value3_r;
wire vns_csr_bankarray_csrbank3_value3_we;
wire [7:0] vns_csr_bankarray_csrbank3_value3_w;
wire vns_csr_bankarray_csrbank3_value2_re;
wire [7:0] vns_csr_bankarray_csrbank3_value2_r;
wire vns_csr_bankarray_csrbank3_value2_we;
wire [7:0] vns_csr_bankarray_csrbank3_value2_w;
wire vns_csr_bankarray_csrbank3_value1_re;
wire [7:0] vns_csr_bankarray_csrbank3_value1_r;
wire vns_csr_bankarray_csrbank3_value1_we;
wire [7:0] vns_csr_bankarray_csrbank3_value1_w;
wire vns_csr_bankarray_csrbank3_value0_re;
wire [7:0] vns_csr_bankarray_csrbank3_value0_r;
wire vns_csr_bankarray_csrbank3_value0_we;
wire [7:0] vns_csr_bankarray_csrbank3_value0_w;
wire vns_csr_bankarray_csrbank3_ev_enable0_re;
wire vns_csr_bankarray_csrbank3_ev_enable0_r;
wire vns_csr_bankarray_csrbank3_ev_enable0_we;
wire vns_csr_bankarray_csrbank3_ev_enable0_w;
wire vns_csr_bankarray_csrbank3_sel;
wire [13:0] vns_csr_bankarray_interface4_bank_bus_adr;
wire vns_csr_bankarray_interface4_bank_bus_we;
wire [7:0] vns_csr_bankarray_interface4_bank_bus_dat_w;
reg [7:0] vns_csr_bankarray_interface4_bank_bus_dat_r = 8'd0;
wire vns_csr_bankarray_csrbank4_txfull_re;
wire vns_csr_bankarray_csrbank4_txfull_r;
wire vns_csr_bankarray_csrbank4_txfull_we;
wire vns_csr_bankarray_csrbank4_txfull_w;
wire vns_csr_bankarray_csrbank4_rxempty_re;
wire vns_csr_bankarray_csrbank4_rxempty_r;
wire vns_csr_bankarray_csrbank4_rxempty_we;
wire vns_csr_bankarray_csrbank4_rxempty_w;
wire vns_csr_bankarray_csrbank4_ev_enable0_re;
wire [1:0] vns_csr_bankarray_csrbank4_ev_enable0_r;
wire vns_csr_bankarray_csrbank4_ev_enable0_we;
wire [1:0] vns_csr_bankarray_csrbank4_ev_enable0_w;
wire vns_csr_bankarray_csrbank4_sel;
wire [13:0] vns_csr_bankarray_interface5_bank_bus_adr;
wire vns_csr_bankarray_interface5_bank_bus_we;
wire [7:0] vns_csr_bankarray_interface5_bank_bus_dat_w;
reg [7:0] vns_csr_bankarray_interface5_bank_bus_dat_r = 8'd0;
wire vns_csr_bankarray_csrbank5_tuning_word3_re;
wire [7:0] vns_csr_bankarray_csrbank5_tuning_word3_r;
wire vns_csr_bankarray_csrbank5_tuning_word3_we;
wire [7:0] vns_csr_bankarray_csrbank5_tuning_word3_w;
wire vns_csr_bankarray_csrbank5_tuning_word2_re;
wire [7:0] vns_csr_bankarray_csrbank5_tuning_word2_r;
wire vns_csr_bankarray_csrbank5_tuning_word2_we;
wire [7:0] vns_csr_bankarray_csrbank5_tuning_word2_w;
wire vns_csr_bankarray_csrbank5_tuning_word1_re;
wire [7:0] vns_csr_bankarray_csrbank5_tuning_word1_r;
wire vns_csr_bankarray_csrbank5_tuning_word1_we;
wire [7:0] vns_csr_bankarray_csrbank5_tuning_word1_w;
wire vns_csr_bankarray_csrbank5_tuning_word0_re;
wire [7:0] vns_csr_bankarray_csrbank5_tuning_word0_r;
wire vns_csr_bankarray_csrbank5_tuning_word0_we;
wire [7:0] vns_csr_bankarray_csrbank5_tuning_word0_w;
wire vns_csr_bankarray_csrbank5_sel;
wire [13:0] vns_csr_interconnect_adr;
wire vns_csr_interconnect_we;
wire [7:0] vns_csr_interconnect_dat_w;
wire [7:0] vns_csr_interconnect_dat_r;
wire [4:0] vns_slice_proxy0;
wire [4:0] vns_slice_proxy1;
wire [4:0] vns_slice_proxy2;
wire [4:0] vns_slice_proxy3;
wire [4:0] vns_slice_proxy4;
reg [29:0] vns_array_muxed0 = 30'd0;
reg [31:0] vns_array_muxed1 = 32'd0;
reg [3:0] vns_array_muxed2 = 4'd0;
reg vns_array_muxed3 = 1'd0;
reg vns_array_muxed4 = 1'd0;
reg vns_array_muxed5 = 1'd0;
reg [2:0] vns_array_muxed6 = 3'd0;
reg [1:0] vns_array_muxed7 = 2'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg vns_xilinxmultiregimpl0_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *) reg vns_xilinxmultiregimpl0_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *) reg [4:0] vns_xilinxmultiregimpl1_regs0 = 5'd0;
(* async_reg = "true", dont_touch = "true" *) reg [4:0] vns_xilinxmultiregimpl1_regs1 = 5'd0;
wire vns_xilinxmultiregimpl1;

assign soc_cpu_reset = soc_soccontroller_reset;
assign db = soc_db_;
assign cs = soc_cs_;
assign rs = soc_rs_;
assign rd = soc_rd_;
assign wr = soc_wr_;
assign rst = soc_rst_;
assign db1 = soc_db_;
assign cs1 = soc_cs_;
assign rs1 = soc_rs_;
assign rd1 = soc_rd_;
assign wr1 = soc_wr_;
assign rst1 = soc_rst_;
assign soc_soccontroller_bus_error = vns_error;
always @(*) begin
	soc_cpu_interrupt <= 32'd0;
	soc_cpu_interrupt[4] <= soc_irq;
	soc_cpu_interrupt[1] <= soc_timer_irq;
	soc_cpu_interrupt[0] <= soc_uart_irq;
end
assign soc_soccontroller_reset = soc_soccontroller_reset_re;
assign soc_soccontroller_bus_errors_status = soc_soccontroller_bus_errors;
assign soc_basesoc_adr = soc_basesoc_ram_bus_adr[12:0];
assign soc_basesoc_ram_bus_dat_r = soc_basesoc_dat_r;
always @(*) begin
	soc_sram0_we <= 4'd0;
	soc_sram0_we[0] <= (((soc_interface0_ram_bus_cyc & soc_interface0_ram_bus_stb) & soc_interface0_ram_bus_we) & soc_interface0_ram_bus_sel[0]);
	soc_sram0_we[1] <= (((soc_interface0_ram_bus_cyc & soc_interface0_ram_bus_stb) & soc_interface0_ram_bus_we) & soc_interface0_ram_bus_sel[1]);
	soc_sram0_we[2] <= (((soc_interface0_ram_bus_cyc & soc_interface0_ram_bus_stb) & soc_interface0_ram_bus_we) & soc_interface0_ram_bus_sel[2]);
	soc_sram0_we[3] <= (((soc_interface0_ram_bus_cyc & soc_interface0_ram_bus_stb) & soc_interface0_ram_bus_we) & soc_interface0_ram_bus_sel[3]);
end
assign soc_sram0_adr = soc_interface0_ram_bus_adr[9:0];
assign soc_interface0_ram_bus_dat_r = soc_sram0_dat_r;
assign soc_sram0_dat_w = soc_interface0_ram_bus_dat_w;
always @(*) begin
	soc_sram1_we <= 4'd0;
	soc_sram1_we[0] <= (((soc_interface1_ram_bus_cyc & soc_interface1_ram_bus_stb) & soc_interface1_ram_bus_we) & soc_interface1_ram_bus_sel[0]);
	soc_sram1_we[1] <= (((soc_interface1_ram_bus_cyc & soc_interface1_ram_bus_stb) & soc_interface1_ram_bus_we) & soc_interface1_ram_bus_sel[1]);
	soc_sram1_we[2] <= (((soc_interface1_ram_bus_cyc & soc_interface1_ram_bus_stb) & soc_interface1_ram_bus_we) & soc_interface1_ram_bus_sel[2]);
	soc_sram1_we[3] <= (((soc_interface1_ram_bus_cyc & soc_interface1_ram_bus_stb) & soc_interface1_ram_bus_we) & soc_interface1_ram_bus_sel[3]);
end
assign soc_sram1_adr = soc_interface1_ram_bus_adr[11:0];
assign soc_interface1_ram_bus_dat_r = soc_sram1_dat_r;
assign soc_sram1_dat_w = soc_interface1_ram_bus_dat_w;
assign soc_uart_uart_sink_valid = soc_source_valid;
assign soc_source_ready = soc_uart_uart_sink_ready;
assign soc_uart_uart_sink_first = soc_source_first;
assign soc_uart_uart_sink_last = soc_source_last;
assign soc_uart_uart_sink_payload_data = soc_source_payload_data;
assign soc_sink_valid = soc_uart_uart_source_valid;
assign soc_uart_uart_source_ready = soc_sink_ready;
assign soc_sink_first = soc_uart_uart_source_first;
assign soc_sink_last = soc_uart_uart_source_last;
assign soc_sink_payload_data = soc_uart_uart_source_payload_data;
assign soc_uart_tx_fifo_sink_valid = soc_uart_rxtx_re;
assign soc_uart_tx_fifo_sink_payload_data = soc_uart_rxtx_r;
assign soc_uart_txfull_status = (~soc_uart_tx_fifo_sink_ready);
assign soc_uart_uart_source_valid = soc_uart_tx_fifo_source_valid;
assign soc_uart_tx_fifo_source_ready = soc_uart_uart_source_ready;
assign soc_uart_uart_source_first = soc_uart_tx_fifo_source_first;
assign soc_uart_uart_source_last = soc_uart_tx_fifo_source_last;
assign soc_uart_uart_source_payload_data = soc_uart_tx_fifo_source_payload_data;
assign soc_uart_tx_trigger = (~soc_uart_tx_fifo_sink_ready);
assign soc_uart_rx_fifo_sink_valid = soc_uart_uart_sink_valid;
assign soc_uart_uart_sink_ready = soc_uart_rx_fifo_sink_ready;
assign soc_uart_rx_fifo_sink_first = soc_uart_uart_sink_first;
assign soc_uart_rx_fifo_sink_last = soc_uart_uart_sink_last;
assign soc_uart_rx_fifo_sink_payload_data = soc_uart_uart_sink_payload_data;
assign soc_uart_rxempty_status = (~soc_uart_rx_fifo_source_valid);
assign soc_uart_rxtx_w = soc_uart_rx_fifo_source_payload_data;
assign soc_uart_rx_fifo_source_ready = (soc_uart_rx_clear | (1'd0 & soc_uart_rxtx_we));
assign soc_uart_rx_trigger = (~soc_uart_rx_fifo_source_valid);
always @(*) begin
	soc_uart_tx_clear <= 1'd0;
	if ((soc_uart_eventmanager_pending_re & soc_uart_eventmanager_pending_r[0])) begin
		soc_uart_tx_clear <= 1'd1;
	end
end
always @(*) begin
	soc_uart_eventmanager_status_w <= 2'd0;
	soc_uart_eventmanager_status_w[0] <= soc_uart_tx_status;
	soc_uart_eventmanager_status_w[1] <= soc_uart_rx_status;
end
always @(*) begin
	soc_uart_rx_clear <= 1'd0;
	if ((soc_uart_eventmanager_pending_re & soc_uart_eventmanager_pending_r[1])) begin
		soc_uart_rx_clear <= 1'd1;
	end
end
always @(*) begin
	soc_uart_eventmanager_pending_w <= 2'd0;
	soc_uart_eventmanager_pending_w[0] <= soc_uart_tx_pending;
	soc_uart_eventmanager_pending_w[1] <= soc_uart_rx_pending;
end
assign soc_uart_irq = ((soc_uart_eventmanager_pending_w[0] & soc_uart_eventmanager_storage[0]) | (soc_uart_eventmanager_pending_w[1] & soc_uart_eventmanager_storage[1]));
assign soc_uart_tx_status = soc_uart_tx_trigger;
assign soc_uart_rx_status = soc_uart_rx_trigger;
assign soc_uart_tx_fifo_syncfifo_din = {soc_uart_tx_fifo_fifo_in_last, soc_uart_tx_fifo_fifo_in_first, soc_uart_tx_fifo_fifo_in_payload_data};
assign {soc_uart_tx_fifo_fifo_out_last, soc_uart_tx_fifo_fifo_out_first, soc_uart_tx_fifo_fifo_out_payload_data} = soc_uart_tx_fifo_syncfifo_dout;
assign soc_uart_tx_fifo_sink_ready = soc_uart_tx_fifo_syncfifo_writable;
assign soc_uart_tx_fifo_syncfifo_we = soc_uart_tx_fifo_sink_valid;
assign soc_uart_tx_fifo_fifo_in_first = soc_uart_tx_fifo_sink_first;
assign soc_uart_tx_fifo_fifo_in_last = soc_uart_tx_fifo_sink_last;
assign soc_uart_tx_fifo_fifo_in_payload_data = soc_uart_tx_fifo_sink_payload_data;
assign soc_uart_tx_fifo_source_valid = soc_uart_tx_fifo_readable;
assign soc_uart_tx_fifo_source_first = soc_uart_tx_fifo_fifo_out_first;
assign soc_uart_tx_fifo_source_last = soc_uart_tx_fifo_fifo_out_last;
assign soc_uart_tx_fifo_source_payload_data = soc_uart_tx_fifo_fifo_out_payload_data;
assign soc_uart_tx_fifo_re = soc_uart_tx_fifo_source_ready;
assign soc_uart_tx_fifo_syncfifo_re = (soc_uart_tx_fifo_syncfifo_readable & ((~soc_uart_tx_fifo_readable) | soc_uart_tx_fifo_re));
assign soc_uart_tx_fifo_level1 = (soc_uart_tx_fifo_level0 + soc_uart_tx_fifo_readable);
always @(*) begin
	soc_uart_tx_fifo_wrport_adr <= 4'd0;
	if (soc_uart_tx_fifo_replace) begin
		soc_uart_tx_fifo_wrport_adr <= (soc_uart_tx_fifo_produce - 1'd1);
	end else begin
		soc_uart_tx_fifo_wrport_adr <= soc_uart_tx_fifo_produce;
	end
end
assign soc_uart_tx_fifo_wrport_dat_w = soc_uart_tx_fifo_syncfifo_din;
assign soc_uart_tx_fifo_wrport_we = (soc_uart_tx_fifo_syncfifo_we & (soc_uart_tx_fifo_syncfifo_writable | soc_uart_tx_fifo_replace));
assign soc_uart_tx_fifo_do_read = (soc_uart_tx_fifo_syncfifo_readable & soc_uart_tx_fifo_syncfifo_re);
assign soc_uart_tx_fifo_rdport_adr = soc_uart_tx_fifo_consume;
assign soc_uart_tx_fifo_syncfifo_dout = soc_uart_tx_fifo_rdport_dat_r;
assign soc_uart_tx_fifo_rdport_re = soc_uart_tx_fifo_do_read;
assign soc_uart_tx_fifo_syncfifo_writable = (soc_uart_tx_fifo_level0 != 5'd16);
assign soc_uart_tx_fifo_syncfifo_readable = (soc_uart_tx_fifo_level0 != 1'd0);
assign soc_uart_rx_fifo_syncfifo_din = {soc_uart_rx_fifo_fifo_in_last, soc_uart_rx_fifo_fifo_in_first, soc_uart_rx_fifo_fifo_in_payload_data};
assign {soc_uart_rx_fifo_fifo_out_last, soc_uart_rx_fifo_fifo_out_first, soc_uart_rx_fifo_fifo_out_payload_data} = soc_uart_rx_fifo_syncfifo_dout;
assign soc_uart_rx_fifo_sink_ready = soc_uart_rx_fifo_syncfifo_writable;
assign soc_uart_rx_fifo_syncfifo_we = soc_uart_rx_fifo_sink_valid;
assign soc_uart_rx_fifo_fifo_in_first = soc_uart_rx_fifo_sink_first;
assign soc_uart_rx_fifo_fifo_in_last = soc_uart_rx_fifo_sink_last;
assign soc_uart_rx_fifo_fifo_in_payload_data = soc_uart_rx_fifo_sink_payload_data;
assign soc_uart_rx_fifo_source_valid = soc_uart_rx_fifo_readable;
assign soc_uart_rx_fifo_source_first = soc_uart_rx_fifo_fifo_out_first;
assign soc_uart_rx_fifo_source_last = soc_uart_rx_fifo_fifo_out_last;
assign soc_uart_rx_fifo_source_payload_data = soc_uart_rx_fifo_fifo_out_payload_data;
assign soc_uart_rx_fifo_re = soc_uart_rx_fifo_source_ready;
assign soc_uart_rx_fifo_syncfifo_re = (soc_uart_rx_fifo_syncfifo_readable & ((~soc_uart_rx_fifo_readable) | soc_uart_rx_fifo_re));
assign soc_uart_rx_fifo_level1 = (soc_uart_rx_fifo_level0 + soc_uart_rx_fifo_readable);
always @(*) begin
	soc_uart_rx_fifo_wrport_adr <= 4'd0;
	if (soc_uart_rx_fifo_replace) begin
		soc_uart_rx_fifo_wrport_adr <= (soc_uart_rx_fifo_produce - 1'd1);
	end else begin
		soc_uart_rx_fifo_wrport_adr <= soc_uart_rx_fifo_produce;
	end
end
assign soc_uart_rx_fifo_wrport_dat_w = soc_uart_rx_fifo_syncfifo_din;
assign soc_uart_rx_fifo_wrport_we = (soc_uart_rx_fifo_syncfifo_we & (soc_uart_rx_fifo_syncfifo_writable | soc_uart_rx_fifo_replace));
assign soc_uart_rx_fifo_do_read = (soc_uart_rx_fifo_syncfifo_readable & soc_uart_rx_fifo_syncfifo_re);
assign soc_uart_rx_fifo_rdport_adr = soc_uart_rx_fifo_consume;
assign soc_uart_rx_fifo_syncfifo_dout = soc_uart_rx_fifo_rdport_dat_r;
assign soc_uart_rx_fifo_rdport_re = soc_uart_rx_fifo_do_read;
assign soc_uart_rx_fifo_syncfifo_writable = (soc_uart_rx_fifo_level0 != 5'd16);
assign soc_uart_rx_fifo_syncfifo_readable = (soc_uart_rx_fifo_level0 != 1'd0);
assign soc_timer_zero_trigger = (soc_timer_value != 1'd0);
assign soc_timer_eventmanager_status_w = soc_timer_zero_status;
always @(*) begin
	soc_timer_zero_clear <= 1'd0;
	if ((soc_timer_eventmanager_pending_re & soc_timer_eventmanager_pending_r)) begin
		soc_timer_zero_clear <= 1'd1;
	end
end
assign soc_timer_eventmanager_pending_w = soc_timer_zero_pending;
assign soc_timer_irq = (soc_timer_eventmanager_pending_w & soc_timer_eventmanager_storage);
assign soc_timer_zero_status = soc_timer_zero_trigger;
assign soc_interface_dat_w = soc_wishbone_dat_w;
assign soc_wishbone_dat_r = soc_interface_dat_r;
always @(*) begin
	soc_interface_adr <= 14'd0;
	soc_interface_we <= 1'd0;
	vns_wishbone2csr_next_state <= 1'd0;
	soc_wishbone_ack <= 1'd0;
	vns_wishbone2csr_next_state <= vns_wishbone2csr_state;
	case (vns_wishbone2csr_state)
		1'd1: begin
			soc_wishbone_ack <= 1'd1;
			vns_wishbone2csr_next_state <= 1'd0;
		end
		default: begin
			if ((soc_wishbone_cyc & soc_wishbone_stb)) begin
				soc_interface_adr <= soc_wishbone_adr;
				soc_interface_we <= (soc_wishbone_we & (soc_wishbone_sel != 1'd0));
				vns_wishbone2csr_next_state <= 1'd1;
			end
		end
	endcase
end
assign sys_clk = clk100;
assign por_clk = clk100;
assign sys_rst = soc_int_rst;
assign soc_arriba_trigger = (~vns_slice_proxy0[1]);
assign soc_abajo_trigger = (~vns_slice_proxy1[0]);
assign soc_derecha_trigger = (~vns_slice_proxy2[2]);
assign soc_izquierda_trigger = (~vns_slice_proxy3[3]);
assign soc_pause_trigger = (~vns_slice_proxy4[4]);
always @(*) begin
	soc_arriba_clear <= 1'd0;
	if ((vns_pending_re & vns_pending_r[0])) begin
		soc_arriba_clear <= 1'd1;
	end
end
always @(*) begin
	soc_abajo_clear <= 1'd0;
	if ((vns_pending_re & vns_pending_r[1])) begin
		soc_abajo_clear <= 1'd1;
	end
end
always @(*) begin
	soc_derecha_clear <= 1'd0;
	if ((vns_pending_re & vns_pending_r[2])) begin
		soc_derecha_clear <= 1'd1;
	end
end
always @(*) begin
	soc_izquierda_clear <= 1'd0;
	if ((vns_pending_re & vns_pending_r[3])) begin
		soc_izquierda_clear <= 1'd1;
	end
end
always @(*) begin
	vns_status_w <= 5'd0;
	vns_status_w[0] <= soc_arriba_status;
	vns_status_w[1] <= soc_abajo_status;
	vns_status_w[2] <= soc_derecha_status;
	vns_status_w[3] <= soc_izquierda_status;
	vns_status_w[4] <= soc_pause_status;
end
always @(*) begin
	soc_pause_clear <= 1'd0;
	if ((vns_pending_re & vns_pending_r[4])) begin
		soc_pause_clear <= 1'd1;
	end
end
always @(*) begin
	vns_pending_w <= 5'd0;
	vns_pending_w[0] <= soc_arriba_pending;
	vns_pending_w[1] <= soc_abajo_pending;
	vns_pending_w[2] <= soc_derecha_pending;
	vns_pending_w[3] <= soc_izquierda_pending;
	vns_pending_w[4] <= soc_pause_pending;
end
assign soc_irq = (((((vns_pending_w[0] & vns_storage[0]) | (vns_pending_w[1] & vns_storage[1])) | (vns_pending_w[2] & vns_storage[2])) | (vns_pending_w[3] & vns_storage[3])) | (vns_pending_w[4] & vns_storage[4]));
assign soc_arriba_status = soc_arriba_trigger;
assign soc_abajo_status = soc_abajo_trigger;
assign soc_derecha_status = soc_derecha_trigger;
assign soc_izquierda_status = soc_izquierda_trigger;
assign soc_pause_status = soc_pause_trigger;
assign soc_data = soc_DATA_storage;
assign soc_option = soc_OPTION_storage;
assign soc_addr = soc_ADDR_storage;
assign soc_status = soc_busy;
assign soc_start = soc_START_storage;
assign soc_db_ = soc_db;
assign soc_cs_ = soc_CS__storage;
assign soc_rs_ = soc_rs;
assign soc_rd_ = soc_rd;
assign soc_wr_ = soc_wr;
assign soc_rst_ = soc_rst;
always @(*) begin
	soc_manage_ant_next_value8 <= 3'd0;
	soc_manage_ant_next_value_ce8 <= 1'd0;
	vns_lcd_i80_next_state <= 3'd0;
	soc_rs_next_value0 <= 1'd0;
	soc_rs_next_value_ce0 <= 1'd0;
	soc_rd_next_value1 <= 1'd0;
	soc_countwr_next_value9 <= 4'd0;
	soc_rd_next_value_ce1 <= 1'd0;
	soc_countwr_next_value_ce9 <= 1'd0;
	soc_wr_next_value2 <= 1'd0;
	soc_wr_next_value_ce2 <= 1'd0;
	soc_db_next_value3 <= 8'd0;
	soc_db_next_value_ce3 <= 1'd0;
	soc_busy_next_value4 <= 1'd0;
	soc_busy_next_value_ce4 <= 1'd0;
	soc_count2_next_value5 <= 4'd0;
	soc_count2_next_value_ce5 <= 1'd0;
	soc_rst_next_value6 <= 1'd0;
	soc_rst_next_value_ce6 <= 1'd0;
	soc_manage_next_value7 <= 4'd0;
	soc_manage_next_value_ce7 <= 1'd0;
	vns_lcd_i80_next_state <= vns_lcd_i80_state;
	case (vns_lcd_i80_state)
		1'd1: begin
			soc_rs_next_value0 <= 1'd0;
			soc_rs_next_value_ce0 <= 1'd1;
			soc_db_next_value3 <= soc_addr;
			soc_db_next_value_ce3 <= 1'd1;
			soc_busy_next_value4 <= 1'd1;
			soc_busy_next_value_ce4 <= 1'd1;
			soc_manage_next_value7 <= 1'd1;
			soc_manage_next_value_ce7 <= 1'd1;
			soc_manage_ant_next_value8 <= 1'd1;
			soc_manage_ant_next_value_ce8 <= 1'd1;
			soc_count2_next_value5 <= 1'd0;
			soc_count2_next_value_ce5 <= 1'd1;
			vns_lcd_i80_next_state <= 3'd4;
		end
		2'd2: begin
			soc_busy_next_value4 <= 1'd1;
			soc_busy_next_value_ce4 <= 1'd1;
			soc_wr_next_value2 <= (~soc_wr);
			soc_wr_next_value_ce2 <= 1'd1;
			soc_manage_next_value7 <= 2'd2;
			soc_manage_next_value_ce7 <= 1'd1;
			soc_countwr_next_value9 <= 1'd0;
			soc_countwr_next_value_ce9 <= 1'd1;
			soc_count2_next_value5 <= 1'd0;
			soc_count2_next_value_ce5 <= 1'd1;
			if ((soc_wr == 1'd1)) begin
				vns_lcd_i80_next_state <= 3'd6;
			end
			if ((soc_wr == 1'd0)) begin
				vns_lcd_i80_next_state <= 3'd4;
			end
		end
		2'd3: begin
			soc_busy_next_value4 <= 1'd1;
			soc_busy_next_value_ce4 <= 1'd1;
			soc_rs_next_value0 <= 1'd1;
			soc_rs_next_value_ce0 <= 1'd1;
			soc_db_next_value3 <= soc_data;
			soc_db_next_value_ce3 <= 1'd1;
			soc_manage_next_value7 <= 2'd3;
			soc_manage_next_value_ce7 <= 1'd1;
			soc_manage_ant_next_value8 <= 2'd3;
			soc_manage_ant_next_value_ce8 <= 1'd1;
			soc_count2_next_value5 <= 1'd0;
			soc_count2_next_value_ce5 <= 1'd1;
			vns_lcd_i80_next_state <= 3'd4;
		end
		3'd4: begin
			soc_count2_next_value5 <= (soc_count2 + 1'd1);
			soc_count2_next_value_ce5 <= 1'd1;
			if ((soc_count2 < 4'd15)) begin
				vns_lcd_i80_next_state <= 3'd4;
			end
			if ((soc_count2 >= 4'd15)) begin
				if ((soc_manage == 1'd0)) begin
					if ((soc_option == 1'd1)) begin
						vns_lcd_i80_next_state <= 2'd3;
					end
					if ((soc_option == 1'd0)) begin
						vns_lcd_i80_next_state <= 1'd1;
					end
				end
				if ((soc_manage == 1'd1)) begin
					vns_lcd_i80_next_state <= 2'd2;
				end
				if ((soc_manage == 2'd2)) begin
					if ((soc_manage_ant == 1'd1)) begin
						if ((soc_option == 1'd1)) begin
							vns_lcd_i80_next_state <= 2'd3;
						end
						if ((soc_option == 1'd0)) begin
							vns_lcd_i80_next_state <= 1'd0;
						end
					end
					if ((soc_manage_ant == 2'd3)) begin
						vns_lcd_i80_next_state <= 1'd0;
					end
					if ((soc_manage_ant == 3'd4)) begin
						vns_lcd_i80_next_state <= 3'd5;
					end
				end
				if ((soc_manage == 2'd3)) begin
					vns_lcd_i80_next_state <= 2'd2;
				end
				if ((soc_manage == 3'd4)) begin
					vns_lcd_i80_next_state <= 2'd2;
				end
				if ((soc_manage == 3'd5)) begin
					vns_lcd_i80_next_state <= 2'd2;
				end
			end
		end
		3'd5: begin
			soc_countwr_next_value9 <= (soc_countwr + 1'd1);
			soc_countwr_next_value_ce9 <= 1'd1;
			if ((soc_countwr < 3'd5)) begin
				vns_lcd_i80_next_state <= 3'd5;
			end
			if ((soc_countwr >= 3'd5)) begin
				vns_lcd_i80_next_state <= 1'd0;
			end
		end
		3'd6: begin
			soc_countwr_next_value9 <= (soc_countwr + 1'd1);
			soc_countwr_next_value_ce9 <= 1'd1;
			if ((soc_countwr < 4'd15)) begin
				vns_lcd_i80_next_state <= 3'd6;
			end
			if ((soc_countwr >= 4'd15)) begin
				vns_lcd_i80_next_state <= 2'd2;
			end
		end
		default: begin
			soc_rs_next_value0 <= 1'd1;
			soc_rs_next_value_ce0 <= 1'd1;
			soc_rd_next_value1 <= 1'd1;
			soc_rd_next_value_ce1 <= 1'd1;
			soc_wr_next_value2 <= 1'd1;
			soc_wr_next_value_ce2 <= 1'd1;
			soc_db_next_value3 <= 1'd0;
			soc_db_next_value_ce3 <= 1'd1;
			soc_busy_next_value4 <= 1'd0;
			soc_busy_next_value_ce4 <= 1'd1;
			soc_count2_next_value5 <= 1'd0;
			soc_count2_next_value_ce5 <= 1'd1;
			soc_rst_next_value6 <= 1'd1;
			soc_rst_next_value_ce6 <= 1'd1;
			soc_manage_next_value7 <= 1'd0;
			soc_manage_next_value_ce7 <= 1'd1;
			if ((soc_start == 1'd1)) begin
				vns_lcd_i80_next_state <= 3'd4;
			end
		end
	endcase
end
assign vns_shared_adr = vns_array_muxed0;
assign vns_shared_dat_w = vns_array_muxed1;
assign vns_shared_sel = vns_array_muxed2;
assign vns_shared_cyc = vns_array_muxed3;
assign vns_shared_stb = vns_array_muxed4;
assign vns_shared_we = vns_array_muxed5;
assign vns_shared_cti = vns_array_muxed6;
assign vns_shared_bte = vns_array_muxed7;
assign soc_cpu_ibus_dat_r = vns_shared_dat_r;
assign soc_cpu_dbus_dat_r = vns_shared_dat_r;
assign soc_cpu_ibus_ack = (vns_shared_ack & (vns_grant == 1'd0));
assign soc_cpu_dbus_ack = (vns_shared_ack & (vns_grant == 1'd1));
assign soc_cpu_ibus_err = (vns_shared_err & (vns_grant == 1'd0));
assign soc_cpu_dbus_err = (vns_shared_err & (vns_grant == 1'd1));
assign vns_request = {soc_cpu_dbus_cyc, soc_cpu_ibus_cyc};
always @(*) begin
	vns_slave_sel <= 4'd0;
	vns_slave_sel[0] <= (vns_shared_adr[29:13] == 1'd0);
	vns_slave_sel[1] <= (vns_shared_adr[29:10] == 13'd4096);
	vns_slave_sel[2] <= (vns_shared_adr[29:12] == 17'd65536);
	vns_slave_sel[3] <= (vns_shared_adr[29:14] == 16'd33280);
end
assign soc_basesoc_ram_bus_adr = vns_shared_adr;
assign soc_basesoc_ram_bus_dat_w = vns_shared_dat_w;
assign soc_basesoc_ram_bus_sel = vns_shared_sel;
assign soc_basesoc_ram_bus_stb = vns_shared_stb;
assign soc_basesoc_ram_bus_we = vns_shared_we;
assign soc_basesoc_ram_bus_cti = vns_shared_cti;
assign soc_basesoc_ram_bus_bte = vns_shared_bte;
assign soc_interface0_ram_bus_adr = vns_shared_adr;
assign soc_interface0_ram_bus_dat_w = vns_shared_dat_w;
assign soc_interface0_ram_bus_sel = vns_shared_sel;
assign soc_interface0_ram_bus_stb = vns_shared_stb;
assign soc_interface0_ram_bus_we = vns_shared_we;
assign soc_interface0_ram_bus_cti = vns_shared_cti;
assign soc_interface0_ram_bus_bte = vns_shared_bte;
assign soc_interface1_ram_bus_adr = vns_shared_adr;
assign soc_interface1_ram_bus_dat_w = vns_shared_dat_w;
assign soc_interface1_ram_bus_sel = vns_shared_sel;
assign soc_interface1_ram_bus_stb = vns_shared_stb;
assign soc_interface1_ram_bus_we = vns_shared_we;
assign soc_interface1_ram_bus_cti = vns_shared_cti;
assign soc_interface1_ram_bus_bte = vns_shared_bte;
assign soc_wishbone_adr = vns_shared_adr;
assign soc_wishbone_dat_w = vns_shared_dat_w;
assign soc_wishbone_sel = vns_shared_sel;
assign soc_wishbone_stb = vns_shared_stb;
assign soc_wishbone_we = vns_shared_we;
assign soc_wishbone_cti = vns_shared_cti;
assign soc_wishbone_bte = vns_shared_bte;
assign soc_basesoc_ram_bus_cyc = (vns_shared_cyc & vns_slave_sel[0]);
assign soc_interface0_ram_bus_cyc = (vns_shared_cyc & vns_slave_sel[1]);
assign soc_interface1_ram_bus_cyc = (vns_shared_cyc & vns_slave_sel[2]);
assign soc_wishbone_cyc = (vns_shared_cyc & vns_slave_sel[3]);
assign vns_shared_err = (((soc_basesoc_ram_bus_err | soc_interface0_ram_bus_err) | soc_interface1_ram_bus_err) | soc_wishbone_err);
assign vns_wait = ((vns_shared_stb & vns_shared_cyc) & (~vns_shared_ack));
always @(*) begin
	vns_shared_ack <= 1'd0;
	vns_error <= 1'd0;
	vns_shared_dat_r <= 32'd0;
	vns_shared_ack <= (((soc_basesoc_ram_bus_ack | soc_interface0_ram_bus_ack) | soc_interface1_ram_bus_ack) | soc_wishbone_ack);
	vns_shared_dat_r <= (((({32{vns_slave_sel_r[0]}} & soc_basesoc_ram_bus_dat_r) | ({32{vns_slave_sel_r[1]}} & soc_interface0_ram_bus_dat_r)) | ({32{vns_slave_sel_r[2]}} & soc_interface1_ram_bus_dat_r)) | ({32{vns_slave_sel_r[3]}} & soc_wishbone_dat_r));
	if (vns_done) begin
		vns_shared_dat_r <= 32'd4294967295;
		vns_shared_ack <= 1'd1;
		vns_error <= 1'd1;
	end
end
assign vns_done = (vns_count == 1'd0);
assign vns_csr_bankarray_csrbank0_sel = (vns_csr_bankarray_interface0_bank_bus_adr[13:9] == 3'd6);
assign vns_csr_bankarray_csrbank0_in_r = vns_csr_bankarray_interface0_bank_bus_dat_w[4:0];
assign vns_csr_bankarray_csrbank0_in_re = ((vns_csr_bankarray_csrbank0_sel & vns_csr_bankarray_interface0_bank_bus_we) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 1'd0));
assign vns_csr_bankarray_csrbank0_in_we = ((vns_csr_bankarray_csrbank0_sel & (~vns_csr_bankarray_interface0_bank_bus_we)) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 1'd0));
assign vns_csr_bankarray_csrbank0_dir_r = vns_csr_bankarray_interface0_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank0_dir_re = ((vns_csr_bankarray_csrbank0_sel & vns_csr_bankarray_interface0_bank_bus_we) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 1'd1));
assign vns_csr_bankarray_csrbank0_dir_we = ((vns_csr_bankarray_csrbank0_sel & (~vns_csr_bankarray_interface0_bank_bus_we)) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 1'd1));
assign vns_status_r = vns_csr_bankarray_interface0_bank_bus_dat_w[4:0];
assign vns_status_re = ((vns_csr_bankarray_csrbank0_sel & vns_csr_bankarray_interface0_bank_bus_we) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 2'd2));
assign vns_status_we = ((vns_csr_bankarray_csrbank0_sel & (~vns_csr_bankarray_interface0_bank_bus_we)) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 2'd2));
assign vns_pending_r = vns_csr_bankarray_interface0_bank_bus_dat_w[4:0];
assign vns_pending_re = ((vns_csr_bankarray_csrbank0_sel & vns_csr_bankarray_interface0_bank_bus_we) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 2'd3));
assign vns_pending_we = ((vns_csr_bankarray_csrbank0_sel & (~vns_csr_bankarray_interface0_bank_bus_we)) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 2'd3));
assign vns_csr_bankarray_csrbank0_ev_enable0_r = vns_csr_bankarray_interface0_bank_bus_dat_w[4:0];
assign vns_csr_bankarray_csrbank0_ev_enable0_re = ((vns_csr_bankarray_csrbank0_sel & vns_csr_bankarray_interface0_bank_bus_we) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 3'd4));
assign vns_csr_bankarray_csrbank0_ev_enable0_we = ((vns_csr_bankarray_csrbank0_sel & (~vns_csr_bankarray_interface0_bank_bus_we)) & (vns_csr_bankarray_interface0_bank_bus_adr[2:0] == 3'd4));
assign vns_csr_bankarray_csrbank0_in_w = soc_in_status[4:0];
assign soc_in_we = vns_csr_bankarray_csrbank0_in_we;
assign vns_csr_bankarray_csrbank0_dir_w = soc_dir_status[7:0];
assign soc_dir_we = vns_csr_bankarray_csrbank0_dir_we;
assign vns_csr_bankarray_csrbank0_ev_enable0_w = vns_storage[4:0];
assign vns_csr_bankarray_csrbank1_sel = (vns_csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd0);
assign vns_csr_bankarray_csrbank1_reset0_r = vns_csr_bankarray_interface1_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank1_reset0_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 1'd0));
assign vns_csr_bankarray_csrbank1_reset0_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 1'd0));
assign vns_csr_bankarray_csrbank1_scratch3_r = vns_csr_bankarray_interface1_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank1_scratch3_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 1'd1));
assign vns_csr_bankarray_csrbank1_scratch3_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 1'd1));
assign vns_csr_bankarray_csrbank1_scratch2_r = vns_csr_bankarray_interface1_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank1_scratch2_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 2'd2));
assign vns_csr_bankarray_csrbank1_scratch2_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 2'd2));
assign vns_csr_bankarray_csrbank1_scratch1_r = vns_csr_bankarray_interface1_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank1_scratch1_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 2'd3));
assign vns_csr_bankarray_csrbank1_scratch1_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 2'd3));
assign vns_csr_bankarray_csrbank1_scratch0_r = vns_csr_bankarray_interface1_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank1_scratch0_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 3'd4));
assign vns_csr_bankarray_csrbank1_scratch0_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 3'd4));
assign vns_csr_bankarray_csrbank1_bus_errors3_r = vns_csr_bankarray_interface1_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank1_bus_errors3_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 3'd5));
assign vns_csr_bankarray_csrbank1_bus_errors3_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 3'd5));
assign vns_csr_bankarray_csrbank1_bus_errors2_r = vns_csr_bankarray_interface1_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank1_bus_errors2_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 3'd6));
assign vns_csr_bankarray_csrbank1_bus_errors2_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 3'd6));
assign vns_csr_bankarray_csrbank1_bus_errors1_r = vns_csr_bankarray_interface1_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank1_bus_errors1_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 3'd7));
assign vns_csr_bankarray_csrbank1_bus_errors1_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 3'd7));
assign vns_csr_bankarray_csrbank1_bus_errors0_r = vns_csr_bankarray_interface1_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank1_bus_errors0_re = ((vns_csr_bankarray_csrbank1_sel & vns_csr_bankarray_interface1_bank_bus_we) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 4'd8));
assign vns_csr_bankarray_csrbank1_bus_errors0_we = ((vns_csr_bankarray_csrbank1_sel & (~vns_csr_bankarray_interface1_bank_bus_we)) & (vns_csr_bankarray_interface1_bank_bus_adr[3:0] == 4'd8));
assign vns_csr_bankarray_csrbank1_reset0_w = soc_soccontroller_reset_storage;
assign vns_csr_bankarray_csrbank1_scratch3_w = soc_soccontroller_scratch_storage[31:24];
assign vns_csr_bankarray_csrbank1_scratch2_w = soc_soccontroller_scratch_storage[23:16];
assign vns_csr_bankarray_csrbank1_scratch1_w = soc_soccontroller_scratch_storage[15:8];
assign vns_csr_bankarray_csrbank1_scratch0_w = soc_soccontroller_scratch_storage[7:0];
assign vns_csr_bankarray_csrbank1_bus_errors3_w = soc_soccontroller_bus_errors_status[31:24];
assign vns_csr_bankarray_csrbank1_bus_errors2_w = soc_soccontroller_bus_errors_status[23:16];
assign vns_csr_bankarray_csrbank1_bus_errors1_w = soc_soccontroller_bus_errors_status[15:8];
assign vns_csr_bankarray_csrbank1_bus_errors0_w = soc_soccontroller_bus_errors_status[7:0];
assign soc_soccontroller_bus_errors_we = vns_csr_bankarray_csrbank1_bus_errors0_we;
assign vns_csr_bankarray_sel = (vns_csr_bankarray_sram_bus_adr[13:9] == 2'd2);
always @(*) begin
	vns_csr_bankarray_sram_bus_dat_r <= 8'd0;
	if (vns_csr_bankarray_sel_r) begin
		vns_csr_bankarray_sram_bus_dat_r <= vns_csr_bankarray_dat_r;
	end
end
assign vns_csr_bankarray_adr = vns_csr_bankarray_sram_bus_adr[5:0];
assign vns_csr_bankarray_csrbank2_sel = (vns_csr_bankarray_interface2_bank_bus_adr[13:9] == 3'd7);
assign vns_csr_bankarray_csrbank2_DATA0_r = vns_csr_bankarray_interface2_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank2_DATA0_re = ((vns_csr_bankarray_csrbank2_sel & vns_csr_bankarray_interface2_bank_bus_we) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 1'd0));
assign vns_csr_bankarray_csrbank2_DATA0_we = ((vns_csr_bankarray_csrbank2_sel & (~vns_csr_bankarray_interface2_bank_bus_we)) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 1'd0));
assign vns_csr_bankarray_csrbank2_ADDR0_r = vns_csr_bankarray_interface2_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank2_ADDR0_re = ((vns_csr_bankarray_csrbank2_sel & vns_csr_bankarray_interface2_bank_bus_we) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 1'd1));
assign vns_csr_bankarray_csrbank2_ADDR0_we = ((vns_csr_bankarray_csrbank2_sel & (~vns_csr_bankarray_interface2_bank_bus_we)) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 1'd1));
assign vns_csr_bankarray_csrbank2_BUSY_r = vns_csr_bankarray_interface2_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank2_BUSY_re = ((vns_csr_bankarray_csrbank2_sel & vns_csr_bankarray_interface2_bank_bus_we) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 2'd2));
assign vns_csr_bankarray_csrbank2_BUSY_we = ((vns_csr_bankarray_csrbank2_sel & (~vns_csr_bankarray_interface2_bank_bus_we)) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 2'd2));
assign vns_csr_bankarray_csrbank2_START0_r = vns_csr_bankarray_interface2_bank_bus_dat_w[1:0];
assign vns_csr_bankarray_csrbank2_START0_re = ((vns_csr_bankarray_csrbank2_sel & vns_csr_bankarray_interface2_bank_bus_we) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 2'd3));
assign vns_csr_bankarray_csrbank2_START0_we = ((vns_csr_bankarray_csrbank2_sel & (~vns_csr_bankarray_interface2_bank_bus_we)) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 2'd3));
assign vns_csr_bankarray_csrbank2_OPTION0_r = vns_csr_bankarray_interface2_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank2_OPTION0_re = ((vns_csr_bankarray_csrbank2_sel & vns_csr_bankarray_interface2_bank_bus_we) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 3'd4));
assign vns_csr_bankarray_csrbank2_OPTION0_we = ((vns_csr_bankarray_csrbank2_sel & (~vns_csr_bankarray_interface2_bank_bus_we)) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 3'd4));
assign vns_csr_bankarray_csrbank2_CS_0_r = vns_csr_bankarray_interface2_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank2_CS_0_re = ((vns_csr_bankarray_csrbank2_sel & vns_csr_bankarray_interface2_bank_bus_we) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 3'd5));
assign vns_csr_bankarray_csrbank2_CS_0_we = ((vns_csr_bankarray_csrbank2_sel & (~vns_csr_bankarray_interface2_bank_bus_we)) & (vns_csr_bankarray_interface2_bank_bus_adr[2:0] == 3'd5));
assign vns_csr_bankarray_csrbank2_DATA0_w = soc_DATA_storage[7:0];
assign vns_csr_bankarray_csrbank2_ADDR0_w = soc_ADDR_storage[7:0];
assign vns_csr_bankarray_csrbank2_BUSY_w = soc_status;
assign soc_we = vns_csr_bankarray_csrbank2_BUSY_we;
assign vns_csr_bankarray_csrbank2_START0_w = soc_START_storage[1:0];
assign vns_csr_bankarray_csrbank2_OPTION0_w = soc_OPTION_storage;
assign vns_csr_bankarray_csrbank2_CS_0_w = soc_CS__storage;
assign vns_csr_bankarray_csrbank3_sel = (vns_csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd5);
assign vns_csr_bankarray_csrbank3_load3_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_load3_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 1'd0));
assign vns_csr_bankarray_csrbank3_load3_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 1'd0));
assign vns_csr_bankarray_csrbank3_load2_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_load2_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 1'd1));
assign vns_csr_bankarray_csrbank3_load2_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 1'd1));
assign vns_csr_bankarray_csrbank3_load1_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_load1_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 2'd2));
assign vns_csr_bankarray_csrbank3_load1_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 2'd2));
assign vns_csr_bankarray_csrbank3_load0_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_load0_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 2'd3));
assign vns_csr_bankarray_csrbank3_load0_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 2'd3));
assign vns_csr_bankarray_csrbank3_reload3_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_reload3_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 3'd4));
assign vns_csr_bankarray_csrbank3_reload3_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 3'd4));
assign vns_csr_bankarray_csrbank3_reload2_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_reload2_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 3'd5));
assign vns_csr_bankarray_csrbank3_reload2_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 3'd5));
assign vns_csr_bankarray_csrbank3_reload1_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_reload1_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 3'd6));
assign vns_csr_bankarray_csrbank3_reload1_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 3'd6));
assign vns_csr_bankarray_csrbank3_reload0_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_reload0_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 3'd7));
assign vns_csr_bankarray_csrbank3_reload0_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 3'd7));
assign vns_csr_bankarray_csrbank3_en0_r = vns_csr_bankarray_interface3_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank3_en0_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd8));
assign vns_csr_bankarray_csrbank3_en0_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd8));
assign vns_csr_bankarray_csrbank3_update_value0_r = vns_csr_bankarray_interface3_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank3_update_value0_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd9));
assign vns_csr_bankarray_csrbank3_update_value0_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd9));
assign vns_csr_bankarray_csrbank3_value3_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_value3_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd10));
assign vns_csr_bankarray_csrbank3_value3_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd10));
assign vns_csr_bankarray_csrbank3_value2_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_value2_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd11));
assign vns_csr_bankarray_csrbank3_value2_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd11));
assign vns_csr_bankarray_csrbank3_value1_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_value1_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd12));
assign vns_csr_bankarray_csrbank3_value1_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd12));
assign vns_csr_bankarray_csrbank3_value0_r = vns_csr_bankarray_interface3_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank3_value0_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd13));
assign vns_csr_bankarray_csrbank3_value0_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd13));
assign soc_timer_eventmanager_status_r = vns_csr_bankarray_interface3_bank_bus_dat_w[0];
assign soc_timer_eventmanager_status_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd14));
assign soc_timer_eventmanager_status_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd14));
assign soc_timer_eventmanager_pending_r = vns_csr_bankarray_interface3_bank_bus_dat_w[0];
assign soc_timer_eventmanager_pending_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd15));
assign soc_timer_eventmanager_pending_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 4'd15));
assign vns_csr_bankarray_csrbank3_ev_enable0_r = vns_csr_bankarray_interface3_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank3_ev_enable0_re = ((vns_csr_bankarray_csrbank3_sel & vns_csr_bankarray_interface3_bank_bus_we) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 5'd16));
assign vns_csr_bankarray_csrbank3_ev_enable0_we = ((vns_csr_bankarray_csrbank3_sel & (~vns_csr_bankarray_interface3_bank_bus_we)) & (vns_csr_bankarray_interface3_bank_bus_adr[4:0] == 5'd16));
assign vns_csr_bankarray_csrbank3_load3_w = soc_timer_load_storage[31:24];
assign vns_csr_bankarray_csrbank3_load2_w = soc_timer_load_storage[23:16];
assign vns_csr_bankarray_csrbank3_load1_w = soc_timer_load_storage[15:8];
assign vns_csr_bankarray_csrbank3_load0_w = soc_timer_load_storage[7:0];
assign vns_csr_bankarray_csrbank3_reload3_w = soc_timer_reload_storage[31:24];
assign vns_csr_bankarray_csrbank3_reload2_w = soc_timer_reload_storage[23:16];
assign vns_csr_bankarray_csrbank3_reload1_w = soc_timer_reload_storage[15:8];
assign vns_csr_bankarray_csrbank3_reload0_w = soc_timer_reload_storage[7:0];
assign vns_csr_bankarray_csrbank3_en0_w = soc_timer_en_storage;
assign vns_csr_bankarray_csrbank3_update_value0_w = soc_timer_update_value_storage;
assign vns_csr_bankarray_csrbank3_value3_w = soc_timer_value_status[31:24];
assign vns_csr_bankarray_csrbank3_value2_w = soc_timer_value_status[23:16];
assign vns_csr_bankarray_csrbank3_value1_w = soc_timer_value_status[15:8];
assign vns_csr_bankarray_csrbank3_value0_w = soc_timer_value_status[7:0];
assign soc_timer_value_we = vns_csr_bankarray_csrbank3_value0_we;
assign vns_csr_bankarray_csrbank3_ev_enable0_w = soc_timer_eventmanager_storage;
assign vns_csr_bankarray_csrbank4_sel = (vns_csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd4);
assign soc_uart_rxtx_r = vns_csr_bankarray_interface4_bank_bus_dat_w[7:0];
assign soc_uart_rxtx_re = ((vns_csr_bankarray_csrbank4_sel & vns_csr_bankarray_interface4_bank_bus_we) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 1'd0));
assign soc_uart_rxtx_we = ((vns_csr_bankarray_csrbank4_sel & (~vns_csr_bankarray_interface4_bank_bus_we)) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 1'd0));
assign vns_csr_bankarray_csrbank4_txfull_r = vns_csr_bankarray_interface4_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank4_txfull_re = ((vns_csr_bankarray_csrbank4_sel & vns_csr_bankarray_interface4_bank_bus_we) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 1'd1));
assign vns_csr_bankarray_csrbank4_txfull_we = ((vns_csr_bankarray_csrbank4_sel & (~vns_csr_bankarray_interface4_bank_bus_we)) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 1'd1));
assign vns_csr_bankarray_csrbank4_rxempty_r = vns_csr_bankarray_interface4_bank_bus_dat_w[0];
assign vns_csr_bankarray_csrbank4_rxempty_re = ((vns_csr_bankarray_csrbank4_sel & vns_csr_bankarray_interface4_bank_bus_we) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 2'd2));
assign vns_csr_bankarray_csrbank4_rxempty_we = ((vns_csr_bankarray_csrbank4_sel & (~vns_csr_bankarray_interface4_bank_bus_we)) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 2'd2));
assign soc_uart_eventmanager_status_r = vns_csr_bankarray_interface4_bank_bus_dat_w[1:0];
assign soc_uart_eventmanager_status_re = ((vns_csr_bankarray_csrbank4_sel & vns_csr_bankarray_interface4_bank_bus_we) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 2'd3));
assign soc_uart_eventmanager_status_we = ((vns_csr_bankarray_csrbank4_sel & (~vns_csr_bankarray_interface4_bank_bus_we)) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 2'd3));
assign soc_uart_eventmanager_pending_r = vns_csr_bankarray_interface4_bank_bus_dat_w[1:0];
assign soc_uart_eventmanager_pending_re = ((vns_csr_bankarray_csrbank4_sel & vns_csr_bankarray_interface4_bank_bus_we) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 3'd4));
assign soc_uart_eventmanager_pending_we = ((vns_csr_bankarray_csrbank4_sel & (~vns_csr_bankarray_interface4_bank_bus_we)) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 3'd4));
assign vns_csr_bankarray_csrbank4_ev_enable0_r = vns_csr_bankarray_interface4_bank_bus_dat_w[1:0];
assign vns_csr_bankarray_csrbank4_ev_enable0_re = ((vns_csr_bankarray_csrbank4_sel & vns_csr_bankarray_interface4_bank_bus_we) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 3'd5));
assign vns_csr_bankarray_csrbank4_ev_enable0_we = ((vns_csr_bankarray_csrbank4_sel & (~vns_csr_bankarray_interface4_bank_bus_we)) & (vns_csr_bankarray_interface4_bank_bus_adr[2:0] == 3'd5));
assign vns_csr_bankarray_csrbank4_txfull_w = soc_uart_txfull_status;
assign soc_uart_txfull_we = vns_csr_bankarray_csrbank4_txfull_we;
assign vns_csr_bankarray_csrbank4_rxempty_w = soc_uart_rxempty_status;
assign soc_uart_rxempty_we = vns_csr_bankarray_csrbank4_rxempty_we;
assign vns_csr_bankarray_csrbank4_ev_enable0_w = soc_uart_eventmanager_storage[1:0];
assign vns_csr_bankarray_csrbank5_sel = (vns_csr_bankarray_interface5_bank_bus_adr[13:9] == 2'd3);
assign vns_csr_bankarray_csrbank5_tuning_word3_r = vns_csr_bankarray_interface5_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank5_tuning_word3_re = ((vns_csr_bankarray_csrbank5_sel & vns_csr_bankarray_interface5_bank_bus_we) & (vns_csr_bankarray_interface5_bank_bus_adr[1:0] == 1'd0));
assign vns_csr_bankarray_csrbank5_tuning_word3_we = ((vns_csr_bankarray_csrbank5_sel & (~vns_csr_bankarray_interface5_bank_bus_we)) & (vns_csr_bankarray_interface5_bank_bus_adr[1:0] == 1'd0));
assign vns_csr_bankarray_csrbank5_tuning_word2_r = vns_csr_bankarray_interface5_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank5_tuning_word2_re = ((vns_csr_bankarray_csrbank5_sel & vns_csr_bankarray_interface5_bank_bus_we) & (vns_csr_bankarray_interface5_bank_bus_adr[1:0] == 1'd1));
assign vns_csr_bankarray_csrbank5_tuning_word2_we = ((vns_csr_bankarray_csrbank5_sel & (~vns_csr_bankarray_interface5_bank_bus_we)) & (vns_csr_bankarray_interface5_bank_bus_adr[1:0] == 1'd1));
assign vns_csr_bankarray_csrbank5_tuning_word1_r = vns_csr_bankarray_interface5_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank5_tuning_word1_re = ((vns_csr_bankarray_csrbank5_sel & vns_csr_bankarray_interface5_bank_bus_we) & (vns_csr_bankarray_interface5_bank_bus_adr[1:0] == 2'd2));
assign vns_csr_bankarray_csrbank5_tuning_word1_we = ((vns_csr_bankarray_csrbank5_sel & (~vns_csr_bankarray_interface5_bank_bus_we)) & (vns_csr_bankarray_interface5_bank_bus_adr[1:0] == 2'd2));
assign vns_csr_bankarray_csrbank5_tuning_word0_r = vns_csr_bankarray_interface5_bank_bus_dat_w[7:0];
assign vns_csr_bankarray_csrbank5_tuning_word0_re = ((vns_csr_bankarray_csrbank5_sel & vns_csr_bankarray_interface5_bank_bus_we) & (vns_csr_bankarray_interface5_bank_bus_adr[1:0] == 2'd3));
assign vns_csr_bankarray_csrbank5_tuning_word0_we = ((vns_csr_bankarray_csrbank5_sel & (~vns_csr_bankarray_interface5_bank_bus_we)) & (vns_csr_bankarray_interface5_bank_bus_adr[1:0] == 2'd3));
assign vns_csr_bankarray_csrbank5_tuning_word3_w = soc_storage[31:24];
assign vns_csr_bankarray_csrbank5_tuning_word2_w = soc_storage[23:16];
assign vns_csr_bankarray_csrbank5_tuning_word1_w = soc_storage[15:8];
assign vns_csr_bankarray_csrbank5_tuning_word0_w = soc_storage[7:0];
assign vns_csr_interconnect_adr = soc_interface_adr;
assign vns_csr_interconnect_we = soc_interface_we;
assign vns_csr_interconnect_dat_w = soc_interface_dat_w;
assign soc_interface_dat_r = vns_csr_interconnect_dat_r;
assign vns_csr_bankarray_interface0_bank_bus_adr = vns_csr_interconnect_adr;
assign vns_csr_bankarray_interface1_bank_bus_adr = vns_csr_interconnect_adr;
assign vns_csr_bankarray_interface2_bank_bus_adr = vns_csr_interconnect_adr;
assign vns_csr_bankarray_interface3_bank_bus_adr = vns_csr_interconnect_adr;
assign vns_csr_bankarray_interface4_bank_bus_adr = vns_csr_interconnect_adr;
assign vns_csr_bankarray_interface5_bank_bus_adr = vns_csr_interconnect_adr;
assign vns_csr_bankarray_sram_bus_adr = vns_csr_interconnect_adr;
assign vns_csr_bankarray_interface0_bank_bus_we = vns_csr_interconnect_we;
assign vns_csr_bankarray_interface1_bank_bus_we = vns_csr_interconnect_we;
assign vns_csr_bankarray_interface2_bank_bus_we = vns_csr_interconnect_we;
assign vns_csr_bankarray_interface3_bank_bus_we = vns_csr_interconnect_we;
assign vns_csr_bankarray_interface4_bank_bus_we = vns_csr_interconnect_we;
assign vns_csr_bankarray_interface5_bank_bus_we = vns_csr_interconnect_we;
assign vns_csr_bankarray_sram_bus_we = vns_csr_interconnect_we;
assign vns_csr_bankarray_interface0_bank_bus_dat_w = vns_csr_interconnect_dat_w;
assign vns_csr_bankarray_interface1_bank_bus_dat_w = vns_csr_interconnect_dat_w;
assign vns_csr_bankarray_interface2_bank_bus_dat_w = vns_csr_interconnect_dat_w;
assign vns_csr_bankarray_interface3_bank_bus_dat_w = vns_csr_interconnect_dat_w;
assign vns_csr_bankarray_interface4_bank_bus_dat_w = vns_csr_interconnect_dat_w;
assign vns_csr_bankarray_interface5_bank_bus_dat_w = vns_csr_interconnect_dat_w;
assign vns_csr_bankarray_sram_bus_dat_w = vns_csr_interconnect_dat_w;
assign vns_csr_interconnect_dat_r = ((((((vns_csr_bankarray_interface0_bank_bus_dat_r | vns_csr_bankarray_interface1_bank_bus_dat_r) | vns_csr_bankarray_interface2_bank_bus_dat_r) | vns_csr_bankarray_interface3_bank_bus_dat_r) | vns_csr_bankarray_interface4_bank_bus_dat_r) | vns_csr_bankarray_interface5_bank_bus_dat_r) | vns_csr_bankarray_sram_bus_dat_r);
assign vns_slice_proxy0 = {user_btn4, user_btn3, user_btn2, user_btn1, user_btn0};
assign vns_slice_proxy1 = {user_btn4, user_btn3, user_btn2, user_btn1, user_btn0};
assign vns_slice_proxy2 = {user_btn4, user_btn3, user_btn2, user_btn1, user_btn0};
assign vns_slice_proxy3 = {user_btn4, user_btn3, user_btn2, user_btn1, user_btn0};
assign vns_slice_proxy4 = {user_btn4, user_btn3, user_btn2, user_btn1, user_btn0};
always @(*) begin
	vns_array_muxed0 <= 30'd0;
	case (vns_grant)
		1'd0: begin
			vns_array_muxed0 <= soc_cpu_ibus_adr;
		end
		default: begin
			vns_array_muxed0 <= soc_cpu_dbus_adr;
		end
	endcase
end
always @(*) begin
	vns_array_muxed1 <= 32'd0;
	case (vns_grant)
		1'd0: begin
			vns_array_muxed1 <= soc_cpu_ibus_dat_w;
		end
		default: begin
			vns_array_muxed1 <= soc_cpu_dbus_dat_w;
		end
	endcase
end
always @(*) begin
	vns_array_muxed2 <= 4'd0;
	case (vns_grant)
		1'd0: begin
			vns_array_muxed2 <= soc_cpu_ibus_sel;
		end
		default: begin
			vns_array_muxed2 <= soc_cpu_dbus_sel;
		end
	endcase
end
always @(*) begin
	vns_array_muxed3 <= 1'd0;
	case (vns_grant)
		1'd0: begin
			vns_array_muxed3 <= soc_cpu_ibus_cyc;
		end
		default: begin
			vns_array_muxed3 <= soc_cpu_dbus_cyc;
		end
	endcase
end
always @(*) begin
	vns_array_muxed4 <= 1'd0;
	case (vns_grant)
		1'd0: begin
			vns_array_muxed4 <= soc_cpu_ibus_stb;
		end
		default: begin
			vns_array_muxed4 <= soc_cpu_dbus_stb;
		end
	endcase
end
always @(*) begin
	vns_array_muxed5 <= 1'd0;
	case (vns_grant)
		1'd0: begin
			vns_array_muxed5 <= soc_cpu_ibus_we;
		end
		default: begin
			vns_array_muxed5 <= soc_cpu_dbus_we;
		end
	endcase
end
always @(*) begin
	vns_array_muxed6 <= 3'd0;
	case (vns_grant)
		1'd0: begin
			vns_array_muxed6 <= soc_cpu_ibus_cti;
		end
		default: begin
			vns_array_muxed6 <= soc_cpu_dbus_cti;
		end
	endcase
end
always @(*) begin
	vns_array_muxed7 <= 2'd0;
	case (vns_grant)
		1'd0: begin
			vns_array_muxed7 <= soc_cpu_ibus_bte;
		end
		default: begin
			vns_array_muxed7 <= soc_cpu_dbus_bte;
		end
	endcase
end
assign soc_rx = vns_xilinxmultiregimpl0_regs1;
assign soc_in_status = vns_xilinxmultiregimpl1_regs1;
assign vns_xilinxmultiregimpl1 = {user_btn4, user_btn3, user_btn2, user_btn1, user_btn0};

always @(posedge por_clk) begin
	soc_int_rst <= (~cpu_reset);
end

always @(posedge sys_clk) begin
	if ((soc_soccontroller_bus_errors != 32'd4294967295)) begin
		if (soc_soccontroller_bus_error) begin
			soc_soccontroller_bus_errors <= (soc_soccontroller_bus_errors + 1'd1);
		end
	end
	soc_basesoc_ram_bus_ack <= 1'd0;
	if (((soc_basesoc_ram_bus_cyc & soc_basesoc_ram_bus_stb) & (~soc_basesoc_ram_bus_ack))) begin
		soc_basesoc_ram_bus_ack <= 1'd1;
	end
	soc_interface0_ram_bus_ack <= 1'd0;
	if (((soc_interface0_ram_bus_cyc & soc_interface0_ram_bus_stb) & (~soc_interface0_ram_bus_ack))) begin
		soc_interface0_ram_bus_ack <= 1'd1;
	end
	soc_interface1_ram_bus_ack <= 1'd0;
	if (((soc_interface1_ram_bus_cyc & soc_interface1_ram_bus_stb) & (~soc_interface1_ram_bus_ack))) begin
		soc_interface1_ram_bus_ack <= 1'd1;
	end
	soc_sink_ready <= 1'd0;
	if (((soc_sink_valid & (~soc_tx_busy)) & (~soc_sink_ready))) begin
		soc_tx_reg <= soc_sink_payload_data;
		soc_tx_bitcount <= 1'd0;
		soc_tx_busy <= 1'd1;
		serial_tx <= 1'd0;
	end else begin
		if ((soc_uart_clk_txen & soc_tx_busy)) begin
			soc_tx_bitcount <= (soc_tx_bitcount + 1'd1);
			if ((soc_tx_bitcount == 4'd8)) begin
				serial_tx <= 1'd1;
			end else begin
				if ((soc_tx_bitcount == 4'd9)) begin
					serial_tx <= 1'd1;
					soc_tx_busy <= 1'd0;
					soc_sink_ready <= 1'd1;
				end else begin
					serial_tx <= soc_tx_reg[0];
					soc_tx_reg <= {1'd0, soc_tx_reg[7:1]};
				end
			end
		end
	end
	if (soc_tx_busy) begin
		{soc_uart_clk_txen, soc_phase_accumulator_tx} <= (soc_phase_accumulator_tx + soc_storage);
	end else begin
		{soc_uart_clk_txen, soc_phase_accumulator_tx} <= soc_storage;
	end
	soc_source_valid <= 1'd0;
	soc_rx_r <= soc_rx;
	if ((~soc_rx_busy)) begin
		if (((~soc_rx) & soc_rx_r)) begin
			soc_rx_busy <= 1'd1;
			soc_rx_bitcount <= 1'd0;
		end
	end else begin
		if (soc_uart_clk_rxen) begin
			soc_rx_bitcount <= (soc_rx_bitcount + 1'd1);
			if ((soc_rx_bitcount == 1'd0)) begin
				if (soc_rx) begin
					soc_rx_busy <= 1'd0;
				end
			end else begin
				if ((soc_rx_bitcount == 4'd9)) begin
					soc_rx_busy <= 1'd0;
					if (soc_rx) begin
						soc_source_payload_data <= soc_rx_reg;
						soc_source_valid <= 1'd1;
					end
				end else begin
					soc_rx_reg <= {soc_rx, soc_rx_reg[7:1]};
				end
			end
		end
	end
	if (soc_rx_busy) begin
		{soc_uart_clk_rxen, soc_phase_accumulator_rx} <= (soc_phase_accumulator_rx + soc_storage);
	end else begin
		{soc_uart_clk_rxen, soc_phase_accumulator_rx} <= 32'd2147483648;
	end
	if (soc_uart_tx_clear) begin
		soc_uart_tx_pending <= 1'd0;
	end
	soc_uart_tx_old_trigger <= soc_uart_tx_trigger;
	if (((~soc_uart_tx_trigger) & soc_uart_tx_old_trigger)) begin
		soc_uart_tx_pending <= 1'd1;
	end
	if (soc_uart_rx_clear) begin
		soc_uart_rx_pending <= 1'd0;
	end
	soc_uart_rx_old_trigger <= soc_uart_rx_trigger;
	if (((~soc_uart_rx_trigger) & soc_uart_rx_old_trigger)) begin
		soc_uart_rx_pending <= 1'd1;
	end
	if (soc_uart_tx_fifo_syncfifo_re) begin
		soc_uart_tx_fifo_readable <= 1'd1;
	end else begin
		if (soc_uart_tx_fifo_re) begin
			soc_uart_tx_fifo_readable <= 1'd0;
		end
	end
	if (((soc_uart_tx_fifo_syncfifo_we & soc_uart_tx_fifo_syncfifo_writable) & (~soc_uart_tx_fifo_replace))) begin
		soc_uart_tx_fifo_produce <= (soc_uart_tx_fifo_produce + 1'd1);
	end
	if (soc_uart_tx_fifo_do_read) begin
		soc_uart_tx_fifo_consume <= (soc_uart_tx_fifo_consume + 1'd1);
	end
	if (((soc_uart_tx_fifo_syncfifo_we & soc_uart_tx_fifo_syncfifo_writable) & (~soc_uart_tx_fifo_replace))) begin
		if ((~soc_uart_tx_fifo_do_read)) begin
			soc_uart_tx_fifo_level0 <= (soc_uart_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (soc_uart_tx_fifo_do_read) begin
			soc_uart_tx_fifo_level0 <= (soc_uart_tx_fifo_level0 - 1'd1);
		end
	end
	if (soc_uart_rx_fifo_syncfifo_re) begin
		soc_uart_rx_fifo_readable <= 1'd1;
	end else begin
		if (soc_uart_rx_fifo_re) begin
			soc_uart_rx_fifo_readable <= 1'd0;
		end
	end
	if (((soc_uart_rx_fifo_syncfifo_we & soc_uart_rx_fifo_syncfifo_writable) & (~soc_uart_rx_fifo_replace))) begin
		soc_uart_rx_fifo_produce <= (soc_uart_rx_fifo_produce + 1'd1);
	end
	if (soc_uart_rx_fifo_do_read) begin
		soc_uart_rx_fifo_consume <= (soc_uart_rx_fifo_consume + 1'd1);
	end
	if (((soc_uart_rx_fifo_syncfifo_we & soc_uart_rx_fifo_syncfifo_writable) & (~soc_uart_rx_fifo_replace))) begin
		if ((~soc_uart_rx_fifo_do_read)) begin
			soc_uart_rx_fifo_level0 <= (soc_uart_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (soc_uart_rx_fifo_do_read) begin
			soc_uart_rx_fifo_level0 <= (soc_uart_rx_fifo_level0 - 1'd1);
		end
	end
	if (soc_uart_reset) begin
		soc_uart_tx_pending <= 1'd0;
		soc_uart_tx_old_trigger <= 1'd0;
		soc_uart_rx_pending <= 1'd0;
		soc_uart_rx_old_trigger <= 1'd0;
		soc_uart_tx_fifo_readable <= 1'd0;
		soc_uart_tx_fifo_level0 <= 5'd0;
		soc_uart_tx_fifo_produce <= 4'd0;
		soc_uart_tx_fifo_consume <= 4'd0;
		soc_uart_rx_fifo_readable <= 1'd0;
		soc_uart_rx_fifo_level0 <= 5'd0;
		soc_uart_rx_fifo_produce <= 4'd0;
		soc_uart_rx_fifo_consume <= 4'd0;
	end
	if (soc_timer_en_storage) begin
		if ((soc_timer_value == 1'd0)) begin
			soc_timer_value <= soc_timer_reload_storage;
		end else begin
			soc_timer_value <= (soc_timer_value - 1'd1);
		end
	end else begin
		soc_timer_value <= soc_timer_load_storage;
	end
	if (soc_timer_update_value_re) begin
		soc_timer_value_status <= soc_timer_value;
	end
	if (soc_timer_zero_clear) begin
		soc_timer_zero_pending <= 1'd0;
	end
	soc_timer_zero_old_trigger <= soc_timer_zero_trigger;
	if (((~soc_timer_zero_trigger) & soc_timer_zero_old_trigger)) begin
		soc_timer_zero_pending <= 1'd1;
	end
	vns_wishbone2csr_state <= vns_wishbone2csr_next_state;
	if (soc_arriba_clear) begin
		soc_arriba_pending <= 1'd0;
	end
	soc_arriba_old_trigger <= soc_arriba_trigger;
	if (((~soc_arriba_trigger) & soc_arriba_old_trigger)) begin
		soc_arriba_pending <= 1'd1;
	end
	if (soc_abajo_clear) begin
		soc_abajo_pending <= 1'd0;
	end
	soc_abajo_old_trigger <= soc_abajo_trigger;
	if (((~soc_abajo_trigger) & soc_abajo_old_trigger)) begin
		soc_abajo_pending <= 1'd1;
	end
	if (soc_derecha_clear) begin
		soc_derecha_pending <= 1'd0;
	end
	soc_derecha_old_trigger <= soc_derecha_trigger;
	if (((~soc_derecha_trigger) & soc_derecha_old_trigger)) begin
		soc_derecha_pending <= 1'd1;
	end
	if (soc_izquierda_clear) begin
		soc_izquierda_pending <= 1'd0;
	end
	soc_izquierda_old_trigger <= soc_izquierda_trigger;
	if (((~soc_izquierda_trigger) & soc_izquierda_old_trigger)) begin
		soc_izquierda_pending <= 1'd1;
	end
	if (soc_pause_clear) begin
		soc_pause_pending <= 1'd0;
	end
	soc_pause_old_trigger <= soc_pause_trigger;
	if (((~soc_pause_trigger) & soc_pause_old_trigger)) begin
		soc_pause_pending <= 1'd1;
	end
	vns_lcd_i80_state <= vns_lcd_i80_next_state;
	if (soc_rs_next_value_ce0) begin
		soc_rs <= soc_rs_next_value0;
	end
	if (soc_rd_next_value_ce1) begin
		soc_rd <= soc_rd_next_value1;
	end
	if (soc_wr_next_value_ce2) begin
		soc_wr <= soc_wr_next_value2;
	end
	if (soc_db_next_value_ce3) begin
		soc_db <= soc_db_next_value3;
	end
	if (soc_busy_next_value_ce4) begin
		soc_busy <= soc_busy_next_value4;
	end
	if (soc_count2_next_value_ce5) begin
		soc_count2 <= soc_count2_next_value5;
	end
	if (soc_rst_next_value_ce6) begin
		soc_rst <= soc_rst_next_value6;
	end
	if (soc_manage_next_value_ce7) begin
		soc_manage <= soc_manage_next_value7;
	end
	if (soc_manage_ant_next_value_ce8) begin
		soc_manage_ant <= soc_manage_ant_next_value8;
	end
	if (soc_countwr_next_value_ce9) begin
		soc_countwr <= soc_countwr_next_value9;
	end
	case (vns_grant)
		1'd0: begin
			if ((~vns_request[0])) begin
				if (vns_request[1]) begin
					vns_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~vns_request[1])) begin
				if (vns_request[0]) begin
					vns_grant <= 1'd0;
				end
			end
		end
	endcase
	vns_slave_sel_r <= vns_slave_sel;
	if (vns_wait) begin
		if ((~vns_done)) begin
			vns_count <= (vns_count - 1'd1);
		end
	end else begin
		vns_count <= 20'd1000000;
	end
	vns_csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
	if (vns_csr_bankarray_csrbank0_sel) begin
		case (vns_csr_bankarray_interface0_bank_bus_adr[2:0])
			1'd0: begin
				vns_csr_bankarray_interface0_bank_bus_dat_r <= vns_csr_bankarray_csrbank0_in_w;
			end
			1'd1: begin
				vns_csr_bankarray_interface0_bank_bus_dat_r <= vns_csr_bankarray_csrbank0_dir_w;
			end
			2'd2: begin
				vns_csr_bankarray_interface0_bank_bus_dat_r <= vns_status_w;
			end
			2'd3: begin
				vns_csr_bankarray_interface0_bank_bus_dat_r <= vns_pending_w;
			end
			3'd4: begin
				vns_csr_bankarray_interface0_bank_bus_dat_r <= vns_csr_bankarray_csrbank0_ev_enable0_w;
			end
		endcase
	end
	if (vns_csr_bankarray_csrbank0_ev_enable0_re) begin
		vns_storage[4:0] <= vns_csr_bankarray_csrbank0_ev_enable0_r;
	end
	vns_re <= vns_csr_bankarray_csrbank0_ev_enable0_re;
	vns_csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
	if (vns_csr_bankarray_csrbank1_sel) begin
		case (vns_csr_bankarray_interface1_bank_bus_adr[3:0])
			1'd0: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_reset0_w;
			end
			1'd1: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_scratch3_w;
			end
			2'd2: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_scratch2_w;
			end
			2'd3: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_scratch1_w;
			end
			3'd4: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_scratch0_w;
			end
			3'd5: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_bus_errors3_w;
			end
			3'd6: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_bus_errors2_w;
			end
			3'd7: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_bus_errors1_w;
			end
			4'd8: begin
				vns_csr_bankarray_interface1_bank_bus_dat_r <= vns_csr_bankarray_csrbank1_bus_errors0_w;
			end
		endcase
	end
	if (vns_csr_bankarray_csrbank1_reset0_re) begin
		soc_soccontroller_reset_storage <= vns_csr_bankarray_csrbank1_reset0_r;
	end
	soc_soccontroller_reset_re <= vns_csr_bankarray_csrbank1_reset0_re;
	if (vns_csr_bankarray_csrbank1_scratch3_re) begin
		soc_soccontroller_scratch_storage[31:24] <= vns_csr_bankarray_csrbank1_scratch3_r;
	end
	if (vns_csr_bankarray_csrbank1_scratch2_re) begin
		soc_soccontroller_scratch_storage[23:16] <= vns_csr_bankarray_csrbank1_scratch2_r;
	end
	if (vns_csr_bankarray_csrbank1_scratch1_re) begin
		soc_soccontroller_scratch_storage[15:8] <= vns_csr_bankarray_csrbank1_scratch1_r;
	end
	if (vns_csr_bankarray_csrbank1_scratch0_re) begin
		soc_soccontroller_scratch_storage[7:0] <= vns_csr_bankarray_csrbank1_scratch0_r;
	end
	soc_soccontroller_scratch_re <= vns_csr_bankarray_csrbank1_scratch0_re;
	vns_csr_bankarray_sel_r <= vns_csr_bankarray_sel;
	vns_csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
	if (vns_csr_bankarray_csrbank2_sel) begin
		case (vns_csr_bankarray_interface2_bank_bus_adr[2:0])
			1'd0: begin
				vns_csr_bankarray_interface2_bank_bus_dat_r <= vns_csr_bankarray_csrbank2_DATA0_w;
			end
			1'd1: begin
				vns_csr_bankarray_interface2_bank_bus_dat_r <= vns_csr_bankarray_csrbank2_ADDR0_w;
			end
			2'd2: begin
				vns_csr_bankarray_interface2_bank_bus_dat_r <= vns_csr_bankarray_csrbank2_BUSY_w;
			end
			2'd3: begin
				vns_csr_bankarray_interface2_bank_bus_dat_r <= vns_csr_bankarray_csrbank2_START0_w;
			end
			3'd4: begin
				vns_csr_bankarray_interface2_bank_bus_dat_r <= vns_csr_bankarray_csrbank2_OPTION0_w;
			end
			3'd5: begin
				vns_csr_bankarray_interface2_bank_bus_dat_r <= vns_csr_bankarray_csrbank2_CS_0_w;
			end
		endcase
	end
	if (vns_csr_bankarray_csrbank2_DATA0_re) begin
		soc_DATA_storage[7:0] <= vns_csr_bankarray_csrbank2_DATA0_r;
	end
	soc_DATA_re <= vns_csr_bankarray_csrbank2_DATA0_re;
	if (vns_csr_bankarray_csrbank2_ADDR0_re) begin
		soc_ADDR_storage[7:0] <= vns_csr_bankarray_csrbank2_ADDR0_r;
	end
	soc_ADDR_re <= vns_csr_bankarray_csrbank2_ADDR0_re;
	if (vns_csr_bankarray_csrbank2_START0_re) begin
		soc_START_storage[1:0] <= vns_csr_bankarray_csrbank2_START0_r;
	end
	soc_START_re <= vns_csr_bankarray_csrbank2_START0_re;
	if (vns_csr_bankarray_csrbank2_OPTION0_re) begin
		soc_OPTION_storage <= vns_csr_bankarray_csrbank2_OPTION0_r;
	end
	soc_OPTION_re <= vns_csr_bankarray_csrbank2_OPTION0_re;
	if (vns_csr_bankarray_csrbank2_CS_0_re) begin
		soc_CS__storage <= vns_csr_bankarray_csrbank2_CS_0_r;
	end
	soc_CS__re <= vns_csr_bankarray_csrbank2_CS_0_re;
	vns_csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
	if (vns_csr_bankarray_csrbank3_sel) begin
		case (vns_csr_bankarray_interface3_bank_bus_adr[4:0])
			1'd0: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_load3_w;
			end
			1'd1: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_load2_w;
			end
			2'd2: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_load1_w;
			end
			2'd3: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_load0_w;
			end
			3'd4: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_reload3_w;
			end
			3'd5: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_reload2_w;
			end
			3'd6: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_reload1_w;
			end
			3'd7: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_reload0_w;
			end
			4'd8: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_en0_w;
			end
			4'd9: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_update_value0_w;
			end
			4'd10: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_value3_w;
			end
			4'd11: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_value2_w;
			end
			4'd12: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_value1_w;
			end
			4'd13: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_value0_w;
			end
			4'd14: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= soc_timer_eventmanager_status_w;
			end
			4'd15: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= soc_timer_eventmanager_pending_w;
			end
			5'd16: begin
				vns_csr_bankarray_interface3_bank_bus_dat_r <= vns_csr_bankarray_csrbank3_ev_enable0_w;
			end
		endcase
	end
	if (vns_csr_bankarray_csrbank3_load3_re) begin
		soc_timer_load_storage[31:24] <= vns_csr_bankarray_csrbank3_load3_r;
	end
	if (vns_csr_bankarray_csrbank3_load2_re) begin
		soc_timer_load_storage[23:16] <= vns_csr_bankarray_csrbank3_load2_r;
	end
	if (vns_csr_bankarray_csrbank3_load1_re) begin
		soc_timer_load_storage[15:8] <= vns_csr_bankarray_csrbank3_load1_r;
	end
	if (vns_csr_bankarray_csrbank3_load0_re) begin
		soc_timer_load_storage[7:0] <= vns_csr_bankarray_csrbank3_load0_r;
	end
	soc_timer_load_re <= vns_csr_bankarray_csrbank3_load0_re;
	if (vns_csr_bankarray_csrbank3_reload3_re) begin
		soc_timer_reload_storage[31:24] <= vns_csr_bankarray_csrbank3_reload3_r;
	end
	if (vns_csr_bankarray_csrbank3_reload2_re) begin
		soc_timer_reload_storage[23:16] <= vns_csr_bankarray_csrbank3_reload2_r;
	end
	if (vns_csr_bankarray_csrbank3_reload1_re) begin
		soc_timer_reload_storage[15:8] <= vns_csr_bankarray_csrbank3_reload1_r;
	end
	if (vns_csr_bankarray_csrbank3_reload0_re) begin
		soc_timer_reload_storage[7:0] <= vns_csr_bankarray_csrbank3_reload0_r;
	end
	soc_timer_reload_re <= vns_csr_bankarray_csrbank3_reload0_re;
	if (vns_csr_bankarray_csrbank3_en0_re) begin
		soc_timer_en_storage <= vns_csr_bankarray_csrbank3_en0_r;
	end
	soc_timer_en_re <= vns_csr_bankarray_csrbank3_en0_re;
	if (vns_csr_bankarray_csrbank3_update_value0_re) begin
		soc_timer_update_value_storage <= vns_csr_bankarray_csrbank3_update_value0_r;
	end
	soc_timer_update_value_re <= vns_csr_bankarray_csrbank3_update_value0_re;
	if (vns_csr_bankarray_csrbank3_ev_enable0_re) begin
		soc_timer_eventmanager_storage <= vns_csr_bankarray_csrbank3_ev_enable0_r;
	end
	soc_timer_eventmanager_re <= vns_csr_bankarray_csrbank3_ev_enable0_re;
	vns_csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
	if (vns_csr_bankarray_csrbank4_sel) begin
		case (vns_csr_bankarray_interface4_bank_bus_adr[2:0])
			1'd0: begin
				vns_csr_bankarray_interface4_bank_bus_dat_r <= soc_uart_rxtx_w;
			end
			1'd1: begin
				vns_csr_bankarray_interface4_bank_bus_dat_r <= vns_csr_bankarray_csrbank4_txfull_w;
			end
			2'd2: begin
				vns_csr_bankarray_interface4_bank_bus_dat_r <= vns_csr_bankarray_csrbank4_rxempty_w;
			end
			2'd3: begin
				vns_csr_bankarray_interface4_bank_bus_dat_r <= soc_uart_eventmanager_status_w;
			end
			3'd4: begin
				vns_csr_bankarray_interface4_bank_bus_dat_r <= soc_uart_eventmanager_pending_w;
			end
			3'd5: begin
				vns_csr_bankarray_interface4_bank_bus_dat_r <= vns_csr_bankarray_csrbank4_ev_enable0_w;
			end
		endcase
	end
	if (vns_csr_bankarray_csrbank4_ev_enable0_re) begin
		soc_uart_eventmanager_storage[1:0] <= vns_csr_bankarray_csrbank4_ev_enable0_r;
	end
	soc_uart_eventmanager_re <= vns_csr_bankarray_csrbank4_ev_enable0_re;
	vns_csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
	if (vns_csr_bankarray_csrbank5_sel) begin
		case (vns_csr_bankarray_interface5_bank_bus_adr[1:0])
			1'd0: begin
				vns_csr_bankarray_interface5_bank_bus_dat_r <= vns_csr_bankarray_csrbank5_tuning_word3_w;
			end
			1'd1: begin
				vns_csr_bankarray_interface5_bank_bus_dat_r <= vns_csr_bankarray_csrbank5_tuning_word2_w;
			end
			2'd2: begin
				vns_csr_bankarray_interface5_bank_bus_dat_r <= vns_csr_bankarray_csrbank5_tuning_word1_w;
			end
			2'd3: begin
				vns_csr_bankarray_interface5_bank_bus_dat_r <= vns_csr_bankarray_csrbank5_tuning_word0_w;
			end
		endcase
	end
	if (vns_csr_bankarray_csrbank5_tuning_word3_re) begin
		soc_storage[31:24] <= vns_csr_bankarray_csrbank5_tuning_word3_r;
	end
	if (vns_csr_bankarray_csrbank5_tuning_word2_re) begin
		soc_storage[23:16] <= vns_csr_bankarray_csrbank5_tuning_word2_r;
	end
	if (vns_csr_bankarray_csrbank5_tuning_word1_re) begin
		soc_storage[15:8] <= vns_csr_bankarray_csrbank5_tuning_word1_r;
	end
	if (vns_csr_bankarray_csrbank5_tuning_word0_re) begin
		soc_storage[7:0] <= vns_csr_bankarray_csrbank5_tuning_word0_r;
	end
	soc_re <= vns_csr_bankarray_csrbank5_tuning_word0_re;
	if (sys_rst) begin
		soc_soccontroller_reset_storage <= 1'd0;
		soc_soccontroller_reset_re <= 1'd0;
		soc_soccontroller_scratch_storage <= 32'd305419896;
		soc_soccontroller_scratch_re <= 1'd0;
		soc_soccontroller_bus_errors <= 32'd0;
		soc_basesoc_ram_bus_ack <= 1'd0;
		soc_interface0_ram_bus_ack <= 1'd0;
		soc_interface1_ram_bus_ack <= 1'd0;
		serial_tx <= 1'd1;
		soc_storage <= 32'd4947802;
		soc_re <= 1'd0;
		soc_sink_ready <= 1'd0;
		soc_uart_clk_txen <= 1'd0;
		soc_tx_busy <= 1'd0;
		soc_source_valid <= 1'd0;
		soc_uart_clk_rxen <= 1'd0;
		soc_rx_r <= 1'd0;
		soc_rx_busy <= 1'd0;
		soc_uart_tx_pending <= 1'd0;
		soc_uart_tx_old_trigger <= 1'd0;
		soc_uart_rx_pending <= 1'd0;
		soc_uart_rx_old_trigger <= 1'd0;
		soc_uart_eventmanager_storage <= 2'd0;
		soc_uart_eventmanager_re <= 1'd0;
		soc_uart_tx_fifo_readable <= 1'd0;
		soc_uart_tx_fifo_level0 <= 5'd0;
		soc_uart_tx_fifo_produce <= 4'd0;
		soc_uart_tx_fifo_consume <= 4'd0;
		soc_uart_rx_fifo_readable <= 1'd0;
		soc_uart_rx_fifo_level0 <= 5'd0;
		soc_uart_rx_fifo_produce <= 4'd0;
		soc_uart_rx_fifo_consume <= 4'd0;
		soc_timer_load_storage <= 32'd0;
		soc_timer_load_re <= 1'd0;
		soc_timer_reload_storage <= 32'd0;
		soc_timer_reload_re <= 1'd0;
		soc_timer_en_storage <= 1'd0;
		soc_timer_en_re <= 1'd0;
		soc_timer_update_value_storage <= 1'd0;
		soc_timer_update_value_re <= 1'd0;
		soc_timer_value_status <= 32'd0;
		soc_timer_zero_pending <= 1'd0;
		soc_timer_zero_old_trigger <= 1'd0;
		soc_timer_eventmanager_storage <= 1'd0;
		soc_timer_eventmanager_re <= 1'd0;
		soc_timer_value <= 32'd0;
		soc_arriba_pending <= 1'd0;
		soc_arriba_old_trigger <= 1'd0;
		soc_abajo_pending <= 1'd0;
		soc_abajo_old_trigger <= 1'd0;
		soc_derecha_pending <= 1'd0;
		soc_derecha_old_trigger <= 1'd0;
		soc_izquierda_pending <= 1'd0;
		soc_izquierda_old_trigger <= 1'd0;
		soc_pause_pending <= 1'd0;
		soc_pause_old_trigger <= 1'd0;
		soc_DATA_storage <= 8'd0;
		soc_DATA_re <= 1'd0;
		soc_ADDR_storage <= 8'd0;
		soc_ADDR_re <= 1'd0;
		soc_START_storage <= 2'd0;
		soc_START_re <= 1'd0;
		soc_OPTION_storage <= 1'd0;
		soc_OPTION_re <= 1'd0;
		soc_CS__storage <= 1'd0;
		soc_CS__re <= 1'd0;
		soc_busy <= 1'd0;
		soc_db <= 8'd0;
		soc_rs <= 1'd0;
		soc_rd <= 1'd0;
		soc_wr <= 1'd0;
		soc_rst <= 1'd0;
		soc_manage <= 4'd0;
		soc_count2 <= 4'd0;
		soc_countwr <= 4'd0;
		soc_manage_ant <= 3'd0;
		vns_wishbone2csr_state <= 1'd0;
		vns_storage <= 5'd0;
		vns_re <= 1'd0;
		vns_lcd_i80_state <= 3'd0;
		vns_grant <= 1'd0;
		vns_slave_sel_r <= 4'd0;
		vns_count <= 20'd1000000;
		vns_csr_bankarray_sel_r <= 1'd0;
	end
	vns_xilinxmultiregimpl0_regs0 <= serial_rx;
	vns_xilinxmultiregimpl0_regs1 <= vns_xilinxmultiregimpl0_regs0;
	vns_xilinxmultiregimpl1_regs0 <= {user_btn4, user_btn3, user_btn2, user_btn1, user_btn0};
	vns_xilinxmultiregimpl1_regs1 <= vns_xilinxmultiregimpl1_regs0;
end

reg [31:0] mem[0:8191];
reg [31:0] memdat;
always @(posedge sys_clk) begin
	memdat <= mem[soc_basesoc_adr];
end

assign soc_basesoc_dat_r = memdat;

initial begin
	$readmemh("mem.init", mem);
end

reg [31:0] mem_1[0:1023];
reg [9:0] memadr;
always @(posedge sys_clk) begin
	if (soc_sram0_we[0])
		mem_1[soc_sram0_adr][7:0] <= soc_sram0_dat_w[7:0];
	if (soc_sram0_we[1])
		mem_1[soc_sram0_adr][15:8] <= soc_sram0_dat_w[15:8];
	if (soc_sram0_we[2])
		mem_1[soc_sram0_adr][23:16] <= soc_sram0_dat_w[23:16];
	if (soc_sram0_we[3])
		mem_1[soc_sram0_adr][31:24] <= soc_sram0_dat_w[31:24];
	memadr <= soc_sram0_adr;
end

assign soc_sram0_dat_r = mem_1[memadr];

initial begin
	$readmemh("mem_1.init", mem_1);
end

reg [31:0] mem_2[0:4095];
reg [11:0] memadr_1;
always @(posedge sys_clk) begin
	if (soc_sram1_we[0])
		mem_2[soc_sram1_adr][7:0] <= soc_sram1_dat_w[7:0];
	if (soc_sram1_we[1])
		mem_2[soc_sram1_adr][15:8] <= soc_sram1_dat_w[15:8];
	if (soc_sram1_we[2])
		mem_2[soc_sram1_adr][23:16] <= soc_sram1_dat_w[23:16];
	if (soc_sram1_we[3])
		mem_2[soc_sram1_adr][31:24] <= soc_sram1_dat_w[31:24];
	memadr_1 <= soc_sram1_adr;
end

assign soc_sram1_dat_r = mem_2[memadr_1];

initial begin
	$readmemh("mem_2.init", mem_2);
end

reg [7:0] mem_3[0:43];
reg [5:0] memadr_2;
always @(posedge sys_clk) begin
	memadr_2 <= vns_csr_bankarray_adr;
end

assign vns_csr_bankarray_dat_r = mem_3[memadr_2];

initial begin
	$readmemh("mem_3.init", mem_3);
end

reg [9:0] storage[0:15];
reg [9:0] memdat_1;
reg [9:0] memdat_2;
always @(posedge sys_clk) begin
	if (soc_uart_tx_fifo_wrport_we)
		storage[soc_uart_tx_fifo_wrport_adr] <= soc_uart_tx_fifo_wrport_dat_w;
	memdat_1 <= storage[soc_uart_tx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (soc_uart_tx_fifo_rdport_re)
		memdat_2 <= storage[soc_uart_tx_fifo_rdport_adr];
end

assign soc_uart_tx_fifo_wrport_dat_r = memdat_1;
assign soc_uart_tx_fifo_rdport_dat_r = memdat_2;

reg [9:0] storage_1[0:15];
reg [9:0] memdat_3;
reg [9:0] memdat_4;
always @(posedge sys_clk) begin
	if (soc_uart_rx_fifo_wrport_we)
		storage_1[soc_uart_rx_fifo_wrport_adr] <= soc_uart_rx_fifo_wrport_dat_w;
	memdat_3 <= storage_1[soc_uart_rx_fifo_wrport_adr];
end

always @(posedge sys_clk) begin
	if (soc_uart_rx_fifo_rdport_re)
		memdat_4 <= storage_1[soc_uart_rx_fifo_rdport_adr];
end

assign soc_uart_rx_fifo_wrport_dat_r = memdat_3;
assign soc_uart_rx_fifo_rdport_dat_r = memdat_4;

VexRiscv VexRiscv(
	.clk(sys_clk),
	.dBusWishbone_ACK(soc_cpu_dbus_ack),
	.dBusWishbone_DAT_MISO(soc_cpu_dbus_dat_r),
	.dBusWishbone_ERR(soc_cpu_dbus_err),
	.externalInterruptArray(soc_cpu_interrupt),
	.externalResetVector(soc_vexriscv),
	.iBusWishbone_ACK(soc_cpu_ibus_ack),
	.iBusWishbone_DAT_MISO(soc_cpu_ibus_dat_r),
	.iBusWishbone_ERR(soc_cpu_ibus_err),
	.reset((sys_rst | soc_cpu_reset)),
	.softwareInterrupt(1'd0),
	.timerInterrupt(1'd0),
	.dBusWishbone_ADR(soc_cpu_dbus_adr),
	.dBusWishbone_BTE(soc_cpu_dbus_bte),
	.dBusWishbone_CTI(soc_cpu_dbus_cti),
	.dBusWishbone_CYC(soc_cpu_dbus_cyc),
	.dBusWishbone_DAT_MOSI(soc_cpu_dbus_dat_w),
	.dBusWishbone_SEL(soc_cpu_dbus_sel),
	.dBusWishbone_STB(soc_cpu_dbus_stb),
	.dBusWishbone_WE(soc_cpu_dbus_we),
	.iBusWishbone_ADR(soc_cpu_ibus_adr),
	.iBusWishbone_BTE(soc_cpu_ibus_bte),
	.iBusWishbone_CTI(soc_cpu_ibus_cti),
	.iBusWishbone_CYC(soc_cpu_ibus_cyc),
	.iBusWishbone_DAT_MOSI(soc_cpu_ibus_dat_w),
	.iBusWishbone_SEL(soc_cpu_ibus_sel),
	.iBusWishbone_STB(soc_cpu_ibus_stb),
	.iBusWishbone_WE(soc_cpu_ibus_we)
);

endmodule
